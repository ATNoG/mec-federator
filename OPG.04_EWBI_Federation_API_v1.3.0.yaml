openapi: 3.0.3
info:
  version: 1.3.0
  title: Federation Management Service
  description: |
    # Introduction
    ---
    RESTful APIs that allow an OP to share the edge cloud resources and capabilities securely to other partner OPs over E/WBI.

    ---
    # API Scope

    ---
    APIs defined in this version of the specification can be categorized into the following areas:
    * __FederationAPIManagement__ - Retrieves federation resources and methods a partner OP support on E/WBI
    * __FederationManagement__ - Create and manage directed federation relationship with a partner OP
    * __AvailabilityZoneInfoSynchronization__ - Management of resources of partner OP zones and status updates
    * __ArtefactManagement__ - Upload, remove, retrieve and update application descriptors, charts and packages over E/WBI towards a partner OP

    * __FileManagement__ - Upload, remove, retrieve and update application binaries over E/WBI towards a partner OP
    * __ApplicationOnboardingManagement__ - Register, retrieve, update and remove applications over E/WBI towards a partner OP
    * __ApplicationDeploymentManagement__ - Create, update, retrieve and terminate application instances over E/WBI towards a partner OP
    * __AppProviderResourceManagement__ - Static resource reservation for an application provider over E/WBI for partner OP zones
    * __EdgeNodeSharing__ - Edge discovery procedures towards partner OP over E/WBI.
    * __ServiceAPIManagement__ - Service APIs capability sharing, forwarding, notification and API context management  
    * __SubscribeMonitoringInfo__ - The Originating OP subscribe for receiving the resource utilization reports periodically from the partner OP for existing federation
    * __FaultManagement__ - The Partner OP performs the alarm reporting and clearances to the Originating OP on existing federation
    * __EventsReporting__ - The Partner OP notifies the detection of events as created by the Originating OP on the existing federation
    * __NetworkEventsReporting__ - The Partner OP notifies the network events applied for offered network capabilities on the existing federation

    ---
    # Definitions
    ---
    This section provides definitions of terminologies commonly referred to throughout the API descriptions.

    * __Accepted Zones__ - List of partner OP zones, which the originating OP has confirmed to use for its edge applications
    * __Anchoring__ - Partner OP capability to serve application clients (still in their home location) from application instances running on partner zones.
    * __Application Provider__ - An application developer, onboarding his/her edge application on a partner operator platform (MEC).
    * __Artefact__ - Descriptor, charts or any other package associated with the application.
    * __Availability Zone__ - Zones that partner OP can offer to share with originating OP.
    * __Device__ - Refers to user equipment like mobile phone, tablet, IOT kit, AR/VR device etc. In context of MEC users use these devices to access edge applications
    * __Directed Federation__ - A Federation between two OP instances A and B, in which edge compute resources are shared by B to A, but not from A to B.
    * __Edge Application__ - Application designed to run on MEC edge cloud
    * __Edge Discovery Service__ - Partner OP service responsible to select most optimal edge( within partner OP) for edge application instantiation. Edge discovery service is defined as HTTP based API endpoint identified by a well-defined FQDN or IP.
    * __E/WBI__ - East west bound interface.
    * __Federation__ - Relationship among member OPs who agrees to offer services and capabilities to the application providers and end users of member OPs
    * __FederationContextId__ - Partner OP defined string identifier representing a certain federation relationship.
    * __Federation Identifier__ - Identify an operator platform in federation context.
    * __FileId__ - An OP defined string identifier representing a certain application image uploaded by an application provider
    * __Flavour__ - A group of compute, network and storage resources that can be requested or granted as a single unit
    * __FlavourIdentifier__ - An OP defined string identifier representing a set of compute, storage and networking resources
    * __Home OP__ - Used in federation context to identify the OP with which the application developers or user clients are registered.
    * __Home Routing__ - Partner OP capability to direct roaming user client traffic towards application instances running on home OP zones.
    * __Instance__ - Application process running on an edge
    * __LCM Service__ - Partner OP service responsible for life cycle management of edge applications. LCM service is defined as HTTP based API endpoint identified by a well-defined FQDN or IP.
    * __Offered Zones__ - Zones that partner OP offer to share to the Originating OP based on the prior agreement and local configuration.
    * __Onboarding__ - Submitting an application to MEC platform
    * __OP__ - Operator platform.
    * __OperatorIdentifier__ - String identifier representing the owner of MEC platform. Owner could be an enterprise, a TSP or some other organization
    * __Originating OP__ - The OP when initiating the federation creation request towards the partner OP is defined as the Originating OP
    * __Partner OP__ - Operator Platform which offers its Edge Cloud capabilities to the other Operator Platforms via E/WBI.
    * __Resource__ - Compute, networking and storage resources.
    * __Resource Pool__ - A group of compute, networking and storage resources. Application provider pre-reserve resources on partner OP zone, these resources are reserved in terms of flavours.
    * __ZoneIdentifier__ - An OP defined string identifier representing a certain geographical or logical area where edge resources and services are provided
    * __Zone Confirmation__ - Procedure via which originating OP acknowledges partner OP about the partner zones it wishes to use.
    * __User Clients__ - Lightweight client applications used to access edge applications. Application users run  these clients on their devices (UE, IOT device, AR/VR device etc)
    * __ServiceAPIManagement__ - Service APIs capability sharing, forwarding, notification and API context management

    ---
    # API Operations
    ---

    __FederationManagement__
    * __CreateFederation__ - Creates a directed federation relationship with a partner OP
    * __GetFederationDetails__ - Retrieves details about the federation relationship with the partner OP. The response shall provide info about the zones offered by the partner, partner OP network codes, information about edge discovery and LCM service etc.
    * __DeleteFederationDetails__ - Remove existing federation with the partner OP
    * __NotifyFederationUpdates__ - Call back notification used by partner OP to update originating OP about any change in existing federation relationship
    * __UpdateFederation__ - API used by the Originating OP towards the partner OP, to update the parameters associated to the existing federation
    * __QueryFederationContext__ - The Originating OP retrieves federationContextId from the partner OP
    * __HealthCheckFederation__ - The Originating OP sends health check message to the partner OP to check the health of the the existing federation
    * __RenewFederation__ - The Originating OP requests the partner OP to renew the existing federation relationship
    * __GetNetworkCapabilities__ - The Originating OP requests the partner OP to share the offered network capabilities information        

    __AvailabilityZoneInfoSynchronization__
    * __ZoneSubscribe__ - Informs partner OP that originating OP is willing to access the specified zones and partner OP shall reserve compute and network resources for these zones.
    * __ZoneUnsubscribe__ - Informs partner OP that originating OP will no longer access the specified partner OP zone.
    * __GetZoneData__ - Retrieves details about the computation and network resources that partner OP has reserved for an partner OP zone.
    * __Notify Zone Information__ - Call back notification used by partner OP to update originating OP about changes in the resources reserved on a partner zone.

    __ArtefactManagement__
    * __UploadArtefact__ - Uploads application artefact on partner operator platform.
    * __RemoveArtefact__ - Removes an artefact from partner operator platform.
    * __GetArtefact__ - Retrieves details about an artefact from partner operator platform.
    * __UploadFile__ Upload application binaries to partner operator platform
    * __RemoveFile__ - Removes application binaries from partner operator platform
    * __ViewFile__ - Retrieves details about binaries associated with an application from partner operator platform

    __ApplicationOnboardingManagement__
    * __OnboardApplication__ - Submits an application details to a partner OP. Based on the details provided,  partner OP shall do bookkeeping, resource validation and other pre-deployment operations
    * __UpdateApplication__ - Updates partner OP about changes in application compute resource requirements, QOS Profile, associated descriptor or change in associated components
    * __DeboardApplication__ - Removes an application from partner OP
    * __ViewApplication__ - Retrieves application details from partner OP
    * __OnboardExistingAppNewZones__ - Make an application available on new additional zones
    * __LockUnlockApplicationZone__ - Forbid or permit instantiation of application on a zone

    __Application Instance Lifecycle Management__
    * __InstallApp__ - Instantiates an application on a partner OP zone.
    * __GetAppInstanceDetails__ - Retrieves an application instance details from partner OP.
    * __RemoveApp__ - Terminate an application instance on a partner OP zone.
    * __GetAllAppInstances__ - Retrieves details about all instances of the application running on partner OP zones.


    __AppProviderResourceManagement__
    * __CreateResourcePools__ - Reserves resources (compute, network and storage)  on a partner OP zone. ISVs registered with home OP reserves resources on a partner OP zone.
    * __UpdateISVResPool__ - Updates resources reserved for a pool by an ISV
    * __ViewISVResPool__ - Retrieves the resource pool reserved by an ISV
    * __RemoveISVResPool__ - Deletes the resource pool reserved by an ISV


    __EdgeNodeSharing__
    *__GetCandidateZones__ - Edge discovery procedures towards partner OP over E/WBI. Originating OP request partner OP to provide a list of candidate zones where an application instance can be created.

    __ServiceAPIManagement__
    *__ServiceAPIRequestForwarding__ - Forward the NBI Service API requests to Partner OP over E/WBI.
    *__RemoveServiceAPISession__ - Remove the existing Service API session with Partner OP over E/WBI.
    *__ServiceAPIRequestForwarding__ - Retrieve Service API session context with Partner OP over E/WBI.

    __ConsumptionReportingManagement__
    *__SubscribeForResourceConsumption__ - Originating OP Subscription for edge resource consumption reporting by Partner OP over E/WBI.

    __EventManagement__
    *__SubscribeForEventNotifications__ - Originating OP Subscription for edge services related events reporting by Partner OP over E/WBI.

    __Alarm Management__
    *__SubscribeForAlarmManagement__ - Originating OP Subscription for reporting of alarms by Partner OP over E/WBI.

    __Network Capabilities Event Management__
    *__SubscribeForNetworkCapabilitiesNotifications__ - Originating OP Subscription for reporting of events for application of network capabilities by Partner OP over E/WBI.


    © 2024 GSM Association.
    All rights reserved.
externalDocs:
  description: GSMA, E/WBI APIs v1.4.1
  url: http://www.xxxx.com
servers:
  - url: '{apiRoot}/operatorplatform/federation/v1'
    variables:
      apiRoot:
        default: https://operatorplatform.com
security:
  - oAuth2ClientCredentials:
      - fed-mgmt
  - notifClientCredentials:
      - fed-mgmt-notif
components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /oauth2/token
          scopes:
            fed-mgmt: Access to the federation APIs
    notifClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /oauth2/token
          scopes:
            fed-mgmt-notif: Access to the federation notification APIs

  schemas:
    AppIdentifier:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
      description: Identifier used to refer to an application.
    AppProviderId:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
      description: UserId of the app provider.  Identifier is relevant only in context of this federation.
    ArtefactId:
      type: string
      format: uuid
      description: A globally unique identifier associated with the artefact. Originating OP generates this identifier when artefact is submitted over NBI.

    CountryCode:
      type: string
      description: ISO 3166-1 Alpha-2 code for the country of Partner operator
      pattern: ^[A-Z]{2}$
    CPUArchType:
      type: string
      enum:
        - ISA_X86
        - ISA_X86_64
        - ISA_ARM_64
      description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.

    InstanceIdentifier:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
      description: Unique identifier generated by the partner OP to identify an instance of the application on a specific zone.
    InstanceState:
      type: string
      enum:
        - PENDING
        - READY
        - FAILED
        - TERMINATING
      description: Running status of the application instance.

    TransactionId:
      description: A unique transaction id for this request in UUID format. It is used for tracking the request
      example: ab1d6gh5-79c2-3256-7hvb-d897549x40f7
      format: uuid
      type: string
    Ipv4Addr:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
      example: 198.51.100.1
    Ipv6Addr:
      type: string
      allOf:
        - pattern: ^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$
        - pattern: ^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$
      example: 2001:db8:85a3::8a2e:370:7334
    Fqdn:
      type: string
    FixedNetworkIds:
      type: array
      items:
        type: string
      description: List of network identifier associated with the fixed line network of the operator platform.
      minItems: 1
    FederationContextId:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
      readOnly: true
      description: This identifier shall be provided by the partner OP on successful verification and validation of the federation create request and is used by partner op to identify this newly created federation context. Originating OP shall provide this identifier in any subsequent request towards the partner op.
    FederationIdentifier:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
      description: Globally unique identifier allocated to an operator platform. This is valid and used only in context of MEC federation interface.
    FileId:
      type: string
      format: uuid
      description: A globally unique identifier associated with the image file. Originating OP generates this identifier when file is uploaded over NBI.    

    FileName:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
      description: Name of the image file.   App provides specifies this name when image is uploaded on originating OP over NBI.    

    FileDescription:
      type: string
      minLength: 8
      maxLength: 128
      description: Brief description about the image file.    

    FileVersionInfo:
      type: string
      description: File version information.    

    FlavourId:
      type: string
      description: An identifier to refer to a specific combination of compute resources
    GeoLocation:
      type: string
      description: Latitude,Longitude as decimal fraction up to 4 digit precision
      pattern: ^([-+]?)([\d]{1,2})((((\.)([\d]{1,4}))?(,)))(([-+]?)([\d]{1,3})((\.)([\d]{1,4}))?)$ 
    Mcc:
      type: string
      pattern: ^\d{3}$
    Mnc:
      type: string
      pattern: ^\d{2,3}$

    OnboardStatusInfo:
      type: string
      enum:
        - PENDING
        - ONBOARDED
        - DEBOARDING
        - REMOVED
        - FAILED
      description: Defines change in application status. This change could be related to application itself or an application instance status


    PoolName:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
      description: ISV defined name of the resource pool.
    PoolId:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
      description: OP defined Identifier for the pool reserved for the ISV. It should be unique with an OP.
    Port:
      type: integer
      minimum: 0
    Status:
      type: string
      enum:
        - FAILED
        - TEMPORARY_FAILURE
        - AVAILABLE
        - LOCKED
        - NOT_AVAILABLE
    Uri:
      type: string
    Vcpu:
      type: string
      pattern: ^\d+((\.\d{1,3})|(m))?$
      description: Number of vcpus in whole, decimal up to millivcpu, or millivcpu format.
      example:
        whole:
          value: 2
        decimal:
          value: 0.500
        millivcpu:
          value: 500m
    VirtImageType:
      type: string
      enum:
        - QCOW2
        - DOCKER
        - OVA
      description: Indicate if the file is Container image or VM image (QCOW2, OVA)

    ZoneIdentifier:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
      description: Human readable name of the zone.

    FederationHealthInfo:
      type: object
      required:
        - federationStatus
        - federationStartTime
        - numOfAcceptedZones    
      properties:
        federationStatus:
          $ref: '#/components/schemas/State'
        federationStartTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject'
        numOfAcceptedZones:
          type: string
        numOfActiveAlarms:
          type: string
        numOfApplications:
          type: string

    FederationSupportedAPIs:
      type: object
      required:
        - federationBaseAPI
        - availabilityZoneAPI
        - edgeApplicationAPI
        - artefactAPI
        - fileAPI       
      properties:
        federationBaseAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        availabilityZoneAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        edgeApplicationAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        artefactAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        fileAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        serviceAPIFederation:
          $ref: '#/components/schemas/FederationAPIResources'
        resourceMonitoringAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        faultManagementAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        eventManagementAPI:
          $ref: '#/components/schemas/FederationAPIResources'


    FederationAPINames:
      type: string
      enum:
        - FEDERATION
        - AVAILZONE
        - ARTEFACT
        - FILE
        - SVSAPEFED
        - RESMONITOR
        - EVENTMGMT
        - FAULTMGMT

    HttpMethods:
      type: string
      enum:
        - POST
        - PUT
        - PATCH
        - DELETE
        - GET

    HttpResources:
      type: object
      required:
        - href
        - httpMethods
      properties:
        href:
          $ref: '#/components/schemas/Uri'
        httpMethods:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethods'
          minItems: 1   
          description: List of HTTP Methods supported for the given API category

    FederationAPIResources:
      type: object
      required:
        - name
        - apiOperations
      properties:
        name:
          $ref: '#/components/schemas/FederationAPINames'
        apiOperations:
          type: array
          items:
            $ref: '#/components/schemas/HttpResources'
          minItems: 1
          description: List of HTTP Methods supported for the given API category

    monitoringSubsType:
      type: string
      enum: ["edge_resource","app_resource","alarm","all"]
      description: Denotes types of edge resources, faults and events at partner OP to be reported to Originating OP.

    resourceSubscriptionInfo:
      type: object
      required:
        - monitoringType
        - subscriptionId
        - dateAndTime
      properties:
        monitoringType:
          $ref: '#/components/schemas/monitoringSubsType'
        dateAndTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject' 
        subscriptionId:
          type: string
          format: uuid
          description:  Partner OP managed identifier for new subscription.

    utilizationValue:
      type: object
      required:
        - resType
        - value
        - unit
      properties:
        resType:
          $ref: '#/components/schemas/resourceType'
        value:
          type: string
          description:  Whole number that represent the value of given resource type.
        unit:
          type: string
          enum:
            - Percent
            - MBPS
            - GB
            - TB
            - CORES
            - SECONDS
            - MINUTES
      description: Indicate the resource measurement Unit
       
    resourceType:
      type: string
      enum:
        - CPU
        - MEMORY
        - DISK
        - Network
        - FLAVOUR
      description: Indicate the type of resource  
      
    edgeResUtilizeMetrics:
      type: object
      required:
        - edgeMetrics
        - federationContextId
        - sequenceNum
      properties:
        edgeMetrics:
          type: array
          items:
            $ref: '#/components/schemas/edgeComputeMetrics'
          minItems: 1
          description: List of edge cloud resource metrics per zone
        federationContextId:
          $ref: '#/components/schemas/FederationContextId'   
        sequenceNum:
          type: integer
          description: Monotonically increasing counter for sequencing resource monitoring reports      
      
    edgeComputeMetrics:
      type: object
      required:
          - zoneId
          - startTime
          - endTime
          - cpuUtil
          - memUtil
          - diskUtil
          - networkUtil
          - flavourUtil
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'
        startTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject' 
        endTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject' 
        cpuUtil:
          $ref: '#/components/schemas/cpuUtilization'
        memUtil:
          $ref: '#/components/schemas/memUtilization' 
        diskUtil:
          $ref: '#/components/schemas/diskUtilization' 
        networkUtil:
          $ref: '#/components/schemas/networkUtilization' 
        flavourUtil:
          $ref: '#/components/schemas/flavourUtilization' 
          
    memUtilization:
      type: object
      required:
        - noOfSamples
        - averageUtilization
        - maxUtilization
        - minUtilization
      properties:
        noOfSamples:
          type: string
          description:  Number of samples used for calculating metrics. 
        averageUtilization:
          $ref: '#/components/schemas/utilizationValue'
        maxUtilization:
          $ref: '#/components/schemas/utilizationValue'
        minUtilization:
          $ref: '#/components/schemas/utilizationValue'
        effectiveUtilization:
          $ref: '#/components/schemas/utilizationValue'

    diskUtilization:
      type: object
      required:
        - noOfSamples
        - averageUtilization
        - maxUtilization
        - minUtilization
      properties:
        noOfSamples:
          type: string
          description:  Number of samples used for calculating metrics. 
        averageUtilization:
          $ref: '#/components/schemas/utilizationValue'
        maxUtilization:
          $ref: '#/components/schemas/utilizationValue'
        minUtilization:
          $ref: '#/components/schemas/utilizationValue'
        effectiveUtilization:
          $ref: '#/components/schemas/utilizationValue'

    networkUtilization:
      type: object
      required:
        - noOfSamples
        - ingressUsage
        - egressUsage
        - averageThroughput
        - maxThroughput
        - minThroughput
      properties:
        noOfSamples:
          type: string
          description:  Number of samples used for calculating metrics. 
        ingressUsage:
          $ref: '#/components/schemas/utilizationValue'
        egressUsage:
          $ref: '#/components/schemas/utilizationValue'
        averageThroughput:
          $ref: '#/components/schemas/utilizationValue'
        maxThroughput:
          $ref: '#/components/schemas/utilizationValue'
        minThroughput:
          $ref: '#/components/schemas/utilizationValue'

    flavourUtilization:
      type: array
      items:
        $ref: '#/components/schemas/flavourMetrics'
      minItems: 1
      description: List of compute flavours metrics per zone
   
    flavourMetrics:
      type: object
      required:
        - noOfSamples
        - flavourId
        - averageUtilization
        - maxUtilization
        - minUtilization
      properties:
        noOfSamples:
          type: string
          description:  Number of samples used for calculating metrics. 
        flavourId:
          $ref: '#/components/schemas/FlavourId'
        averageUtilization:
          $ref: '#/components/schemas/utilizationValue'
        averageThroughput:
          $ref: '#/components/schemas/utilizationValue'
        maxUtilization:
          $ref: '#/components/schemas/utilizationValue'
        minUtilization:
          $ref: '#/components/schemas/utilizationValue'

    appsResUtilizeInfo:
      type: object
      required:
        - appMetrics
        - federationContextId
        - sequenceNum
      properties:
        appMetrics:
          type: array
          items:
            $ref: '#/components/schemas/appsResUtilizeMetrics'
          minItems: 1
          description: List of edge cloud resource metrics per zone
        federationContextId:
          $ref: '#/components/schemas/FederationContextId'
        sequenceNum:
          type: integer
          description: Monotonically increasing counter for sequencing app monitoring reports      


    appsResUtilizeMetrics:
      type: object
      required:
          - zoneId
          - startTime
          - endTime
          - appZoneMetrics
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'
        startTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject' 
        endTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject' 
        appZoneMetrics:
          $ref: '#/components/schemas/appMetrics' 
    
    appMetrics:
      type: array
      items:
        $ref: '#/components/schemas/appAggrResUtil'
      minItems: 1
      description: List of edge cloud resource metrics per zone
 
    appAggrResUtil:
      type: object
      required:
          - appId
          - appProvId
          - noOfAppInstances
          - appInstances
          - cpuUtil
          - memUtil
          - diskUtil
          - networkUtil
          - flavourUtil
      properties:
        appId:
          $ref: '#/components/schemas/AppIdentifier'
        appProvId:
          $ref: '#/components/schemas/AppProviderId' 
        noOfAppInstances:
          type: integer
          description: No of application instances of appId in a zone
        appInstances:
          type: array
          items:
            $ref: '#/components/schemas/InstanceIdentifier'
          minItems: 1
        cpuUtil:
          $ref: '#/components/schemas/cpuUtilization'
        memUtil:
          $ref: '#/components/schemas/memUtilization' 
        diskUtil:
          $ref: '#/components/schemas/diskUtilization' 
        networkUtil:
          $ref: '#/components/schemas/networkUtilization' 
        flavourUtil:
          $ref: '#/components/schemas/flavourUtilization' 
 
         
    cpuUtilization:
      type: object
      required:
        - cpuType
        - noOfSamples
        - averageUtilization
        - maxUtilization
        - minUtilization
        - effectiveUtilization
      properties:
        cpuType:
          $ref: '#/components/schemas/monitoringSubsType'
        noOfSamples:
          type: string
          description:  Number of samples used for calculating metrics. 
        averageUtilization:
          $ref: '#/components/schemas/utilizationValue'
        maxUtilization:
          $ref: '#/components/schemas/utilizationValue'
        minUtilization:
          $ref: '#/components/schemas/utilizationValue'
        effectiveUtilization:
          $ref: '#/components/schemas/utilizationValue'

    thresholdVal:
      type: object
      required:
        - value
        - unit
      properties:
        value:
          type: string
        unit:
          type: string
          enum:
            - percent
            - CORES
            - TB
            - GB
            - MBPS
            - GBPS
          description:  The unit of resources measurement e.g. number of cores, mega bits per seconds etc.

    EventSubscription:
      type: object
      required:
        - resUsageType
        - periodicity
        - eventListner
      properties:
        resUsageType:
          $ref: '#/components/schemas/resourceType'
        periodicity:
          $ref: '#/components/schemas/periodicityInterval'
        eventListner:
          $ref: '#/components/schemas/Uri'

    EventSubscriptionInfo:
      type: object
      required:
        - resUsageType
        - periodicity
        - subscriptionId
      properties:
        resUsageType:
          $ref: '#/components/schemas/resourceType'
        periodicity:
          $ref: '#/components/schemas/periodicityInterval'
        subscriptionId:
          type: string
          format: uuid      
  
    eventCriterion:
      type: object
      required:
        - resUsageType
        - triggerCondition
        - thresholdVal
        - numOccurance
        - monitorDuration
      properties:
        resUsageType:
          $ref: '#/components/schemas/resourceType'
        triggerCondition:
          type: string
          enum:
            - GT
            - GTE
            - EQ
            - LT
            - LEQ
          description:  The condition evaluation operator to compare threashold value of a resource for event detection. 
        thresholdVal:
          $ref: '#/components/schemas/thresholdVal'
        numOccurance:
          type: integer
          description: Number of times the trigger condition is detected
        monitorDuration:
          $ref: '#/components/schemas/periodicityInterval'

    eventInfo:
      type: object
      required:
        - eventId
        - eventCriterion
      properties:
        eventId:
          type: string
        eventCriterion:
          $ref: '#/components/schemas/eventCriterion'
 
    eventTypeList:
      type: array
      items:
        $ref: '#/components/schemas/eventCriterion'  
      minItems: 1
      description: List of event criterion 

    detectedEvent:
      type: object
      required:
        - zoneId
        - eventId
        - startTime
        - endTime
        - numOccurance
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'    
        eventId:
          type: string
        startTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject'
        endTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject'
        numOccurance:
          type: integer

    CapabilityID:
      type: string
      enum:
        - NW_CAP_CONN_STATE_CHANGE
        - NW_CAP_LOCATION_RETRIEVAL
        - NW_CAP_USERPLANE_MGMT_EVENTS
        - NW_CAP_DYNAMIC_QOS
      description: The enumerated list of network capabilities that an OP can use for various services via SBI-NR.
    
    DeviceConnStatusChangeCap:
      type: object
      required:
        - capabilityId
        - maxiDetectionTime
      properties:
        capabilityId:
          $ref: '#/components/schemas/CapabilityID'    
        maxiDetectionTime:
          type: string
          description:  The maximum detection time in seconds that the OP can determine the UE change of connectivity with the mobile network.

    LocationRetrievalCap:
      type: object
      required:
        - capabilityId
        - locationType
      properties:
        capabilityId:
          $ref: '#/components/schemas/CapabilityID'    
        locationType:
          type: string
          enum:
            - CELL_LEVEL_ACCURACY
            - REGISTRATION_AREA_ACCURACY
            - TRACKING_AREA_ACCURACY
            - GEO_LOCATION_ACCURACY
          description:  The enumerated list of UE location accuracy that an OP can determine via SBI-NR.
        locationAccuracy:
          type: string
          enum:
            - LAST_KNOWN_LOCATION
            - CURRENT_LOCATION
            - INITIAL_LOCATION
          description:  The enumerated list of type of network location of an UE that an OP can determine via SBI-NR.

    UserPlaneMgmtEvtCap:
      type: object
      required:
        - capabilityId
        - maxUserPlaneLatency
      properties:
        capabilityId:
          $ref: '#/components/schemas/CapabilityID'    
        maxUserPlaneLatency:
          type: string
          description: Indicates the maximum user plane latency in units of milliseconds to decide whether edge relocation is needed to ascertain latency remain in this range.

    DynamicQoSCap:
      type: object
      required:
        - capabilityId
        - supportedQoS
      properties:
        capabilityId:
          $ref: '#/components/schemas/CapabilityID'    
        supportedQoS:
          type: string
          description:  Set of one or more 5G QoS Identifier (5QI or 4G QCI) created via concatanation of Resource Type and 5QI values i.e., GBR1, GBR2, GBR65, NONGBR79 etc.


    NetworkCapAppInfoList:
      type: array
      items:
        required:
          - appProviderId
          - appId
          - AppInstNetworkCapInvoked 
          - zoneId
        properties:
          appProviderId:
            $ref: '#/components/schemas/AppProviderId'    
          appId:
            $ref: '#/components/schemas/AppIdentifier'
          zoneId:
            $ref: '#/components/schemas/ZoneIdentifier'    
          appInstNetworkCapInvoked:
            $ref: '#/components/schemas/AppInstNetworkCapList'
      minItems: 1

    AppInstNetworkCapList:
      type: object
      required:
        - appInstanceNwCapInfo
      properties:
        appInstanceNwCapInfo:
          type: array
          items:
            type: object
            required:
              - appInstIdentifier
              - appInstanceState
              - networkCapInvoked
            properties:
              appInstIdentifier:
                $ref: '#/components/schemas/InstanceIdentifier'
              appInstanceState:
                $ref: '#/components/schemas/InstanceState'
              networkCapInvoked:
                $ref: '#/components/schemas/NetworkCapInvoked'
            minItems: 1

    NetworkCapInvoked:
      type: object
      required:
        - networkEventId
        - capabilityId
        - zoneId
        - detectionTime
        - nwCapabilitySLI
      properties:
        networkEventId:
          type: string
          format: uuid
          description: Unique identifier allocated for a network event 
        capabilityId:
          $ref: '#/components/schemas/CapabilityID'
        invocationTime:
          $ref: '#/components/schemas/dateAndTimeZoneObject'
        nwCapabilitySLI:
          type: string
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'    

    NetworkCapSubsInfo:
      type: object
      required:
        - appId
        - appProviderId
        - capabilityId
      properties:
        appId:
          $ref: '#/components/schemas/AppIdentifier'
        appProviderId:
          $ref: '#/components/schemas/AppProviderId'  
        capabilityId:
          $ref: '#/components/schemas/CapabilityID'


    NetworkEventsList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkCapInvoked'  
      minItems: 1
      description: List of network capabilities events detected 

  
    EventsList:
      type: array
      items:
        $ref: '#/components/schemas/detectedEvent'  
      minItems: 1
      description: List of events detected 

    EventSubscriptionIdentifier:
      type: string
      format: uuid
      description: Event subscription identifier allocated for enabling event reporting 

    EventIdentifier:
      type: string
      format: uuid
      description: Event identifier allocated for event detected 

    SubscriptionIdentifier:
      type: object
      required:
        - subsId
      properties:
        subsId:    
          type: string
          format: uuid
          description: Generic subscription identifier 
    
    AlarmObjectInfo:
      type: object
      required:
        - alarmType
        - alarmId
        - perceivedSeverity
        - probableCause
        - alarmedObject
        - sourceSystemId
        - state
        - alarmRaisedTime
      properties:
        alarmType:
          $ref: '#/components/schemas/AlarmType'
        alarmId:
          $ref: '#/components/schemas/AlarmIdentifier'
        perceivedSeverity:
          $ref: '#/components/schemas/PerceivedSeverity'
        probableCause:
          $ref: '#/components/schemas/ProbableCause'      
        alarmedObject:
          $ref: '#/components/schemas/AlarmedObject'
        sourceSystemId:
          $ref: '#/components/schemas/SourceSystemId'
        state:
          $ref: '#/components/schemas/State'
        alarmRaisedTime:
          $ref: '#/components/schemas/AlarmRaisedTime'      
        affectedService:
          $ref: '#/components/schemas/AffectedService'
        alarmDetails:
          $ref: '#/components/schemas/AlarmDetails'
        specificProblem:
          $ref: '#/components/schemas/SpecificProblem'
        serviceAffecting:
          $ref: '#/components/schemas/ServiceAffecting'

    ActiveAlarmsList:
      type: array
      items:
          $ref: '#/components/schemas/AlarmObjectInfo'
      minItems: 1
      description: List of active alarms

    AlarmType:
      type: object
      required:
        - alarmType
      properties:
        alarmType:  
          type: string
          enum:
            - EDGERES
            - APPLICATION
            - ARTEFACT
            - EDGEDISC
            - FEDERATION
            - SECURITY
            - APIFEDERATION
            - FILE
          description: Alarm type category 

    AlarmIdentifier:
      type: object
      required:
        - alarmId
      properties:
        alarmId:  
          type: string
          description: Alarm identifier to refer to an alarm instance 

    PerceivedSeverity:
      type: object
      required:
        - severity
      properties:
        severity:  
          type: string
          enum:
            - MAJOR
            - MINOR
            - CRITICAL
            - WARNING
            - INFOMATIONAL
          description: Alarm severity 

    ProbableCause:
      type: object
      required:
        - cause
      properties:
        cause:  
          type: string
          description: Probale cause of the alarm 

    AlarmedObject:
      type: object
      required:
        - alarmId
        - href
      properties:
        alarmId:  
          $ref: '#/components/schemas/AlarmIdentifier'
        href:
          $ref: '#/components/schemas/Uri'    

    SourceSystemId:
      type: object
      required:
        - sourceSystemId
      properties:
        sourceSystemId:  
          type: string
          description: Source system identity 

    State:
      type: object
      required:
        - alarmState
      properties:
        alarmState:  
          type: string
          enum:
            - RAISED
            - UPDATED
            - CLEAR
          description: Defines the alarm state during its life cycle (raised | updated | cleared). 

    AlarmRaisedTime:
      type: object
      required:
        - alarmRaisedTime
      properties:
        alarmRaisedTime:  
          type: string
          format: date-time
          description: Defines the alarm raised time at source 

    AffectedService:
      type: object
      required:
        - affectedService
      properties:
        affectedService:  
          type: array
          items:
            type: string
            minItems: 1
          description: Defines the affected services e.g., edge discovery, application services, API services etc at source 

    AlarmDetails:
      type: object
      required:
        - alarmDetails
      properties:
        alarmDetails:  
          type: string
          description: Detailed information of the alarm 

    SpecificProblem:
      type: object
      required:
        - specificProblem
      properties:
        specificProblem:  
          type: string
          description: Specific information related to the alarm 

    ServiceAffecting:
      type: string
      enum:
        - YES
        - NO
      description: Specific information related to the alarm 

    PatchableParams:
      type: string
      enum: ["/perceivedSeverity","/probableCause","/alarmedObject","/sourceSystemId","/state","/affectedService","/alarmDetails","/specificProblem","/serviceAffecting"]

    AlarmUpdateOps:
      type: string
      enum:
        - REPLACE
      description: Operations that can be performed to update the parameters of an alarm 

    UpdatedParam:
      type: object
      required:
          - alarmUpdateOps
          - patchableParam
          - patchValue
      properties:
        alarmUpdateOps:
          $ref: '#/components/schemas/AlarmUpdateOps'
        patchableParam:
          $ref: '#/components/schemas/PatchableParams'
        patchValue:
          type: string
          description: Value to be replaced for the alarm parameter being updated

    UpdatedAlarmParameters:
      type: object
      required:
        - alarmId
        - updateParams
      properties:
        alarmId:
          $ref: '#/components/schemas/AlarmIdentifier'
        updateParams:
          type: array
          items:
            $ref: '#/components/schemas/UpdatedParam'
          minItems: 1
          description: List of alarm parameters to be updated in an update operation

    serviceType:
      type: string
      enum: ["api_federation"]
      description: An identifier to refer to partner OP capabilities for application providers.

    serviceAPINames:
      type: array
      items:
          type: string
          enum:
            - QualityOnDemand
            - DeviceLocation
            - DeviceStatus
            - SimSwap
            - NumberVerification
            - DeviceIdentifier
      minItems: 1
      description: List of Service API capability names an OP supports and offers to other OPs "quality_on_demand", "device_location" etc.

    serviceAPINameVal:
      type: string
      enum:
        - QualityOnDemand
        - DeviceLocation
        - DeviceStatus
        - SimSwap
        - NumberVerification
        - DeviceIdentifier      
      description: Name of the Service API
    
    serviceRoutingInfo:
      type: array
      items:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))?$
      minItems: 1
      description: List of public IP addresses MNO manages for UEs to connect with public data networks    


    customerID:
      type: string
      format: uuid
      description:  Leading OP managed identifier associated to API Provider of the Leading OP.

    txnIdentifier:
      type: string
      description: A API transaction identifier generated by the Partner OP for each API request 
  
    connectID:
      type: string
      description: An identifier generated by the Partner OP to represent the end user identity in the Service API request.

    apiContentType:
      type: string
      enum:
        - application/json
      description: Indicate the Service API body schema in JSON format

    serviceAPIContent:
      type: object
      required:
          - mediaType
          - APIContent
      properties:
        mediaType:
          $ref: '#/components/schemas/apiContentType'
        APIContent:
          $ref: 'https://github.com/camaraproject'

    PlatformCaps:
      type: array
      items:
        type: string
        enum:
          - homeRouting
          - Anchoring
          - serviceAPIs
          - faultMgmt
          - eventMgmt
          - resourceMonitor
          - networkEventMgmt
      description: Home routing - Operator platform is capable of routing edge application data traffic from its edges to user device in their home location. This is the case where user devices are served in their home region (requesting platform region, non-roaming) but the corresponding edge application are in operator platform edges. Anchoring - Operator platform is capable of routing edge application traffic for roaming user devices to edge application in user device home network. Service APIs - Capability to handle Service APIs (e.g., CAMARA APIs) from the Leading OP

    expiryInterval:
      type: object
      required:
          - numHours
          - numMins
          - numSecs
      properties:
        numHours:
          type: integer
          format: int32
          description: Number of Hours for Expiry (0-23) 
        numMins:
          type: integer
          format: int32
          description: Number of Minutes for Expiry (0-59)
        numSecs:
          type: integer
          format: int32
          description: Number of Seconds for Expiry (0-59)

    periodicityInterval:
      type: object
      required:
          - numHours
          - numMins
      properties:
        numHours:
          type: integer
          format: int32
          description: Number of Hours for Expiry (0-23) 
        numMins:
          type: integer
          format: int32
          description: Number of Minutes for Expiry (0-59)

    periodicNotifConfig:
      type: object
      properties:
        periodicity:
          $ref: '#/components/schemas/periodicityInterval'
        notificationListner:
          $ref: '#/components/schemas/Uri'

    targetUserContext:
      type: object
      required:
          - connectID
          - expiryDuration
      properties:
        connectID:
          $ref: '#/components/schemas/connectID'
        expiryDuration:
          $ref: '#/components/schemas/expiryInterval'
      
    serviceAPIResponse:
      type: object
      required:
          - customerID
          - targetUserContext
          - apiResponse
          - txnIdentifier
      properties:
        customerID:
          $ref: '#/components/schemas/customerID'
        targetUserContext:
          $ref: '#/components/schemas/targetUserContext'
        apiResponse:
          $ref: '#/components/schemas/customerID'
        txnIdentifier:
          $ref: '#/components/schemas/txnIdentifier'
    svcEventType:
      type: string
      enum:
        - "evt_timerexpiry"
        - "evt_network"
        - "evt_delete"

    
    serviceAPIEventDef:
      type: object
      required:
        - NetworkEventDef
      properties:
        NetworkEventDef:
          $ref: 'https://github.com/camaraproject'
      
    serviceAPINetworkEvent:
      type: object
      required:
          - connectID
          - customerID
          - EventType
      properties:
        connectID:
          $ref: '#/components/schemas/connectID'
        customerID:
          $ref: '#/components/schemas/customerID'
        EventType:
          $ref: '#/components/schemas/svcEventType'
        serviceAPIEventDef:
          $ref: '#/components/schemas/serviceAPIEventDef'
        expiryDuration:
          $ref: '#/components/schemas/expiryInterval'    

    #
    # STRUCTURED DATA TYPES
    #
    ServiceNameNB:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
      description: Must be a valid RFC 1035 label name. This defines the DNS name via which the component can be accessed over NBI. Access via     serviceNameNB is restricted on specific ports. Platform shall expose component access externally via this DNS name
    ServiceNameEW:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
      description: Must be a valid RFC 1035 label name. This defines the DNS name via which the component can be accessed via peer components. Access via serviceNameEW is open on all ports.   Platform shall not expose serviceNameEW externally outside edge.
    ComponentName:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
      description: Must be a valid RFC 1035 label name.  Component name must be unique with an application


    AppComponentSpecs:
      description: An application may consist of more than one component. Each component is associated with a descriptor and may exposes its services externally or internally.  App providers are required to provide details about all these components, their associated descriptors and their DNS names.
      type: array
      items:
        type: object
        required:
          - artefactId
        properties:
          serviceNameNB:
            $ref: '#/components/schemas/ServiceNameNB'
          serviceNameEW:
            $ref: '#/components/schemas/ServiceNameEW'
          componentName:
            $ref: '#/components/schemas/ComponentName'
          artefactId:
            $ref: '#/components/schemas/ArtefactId'
      minItems: 1

    AppMetaData:
      description: Application metadata details
      type: object
      required:
        - appName
        - version
        - accessToken
      properties:
        appName:
          type: string
          pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
          description: Name of the application. Application provider define a human readable name for the application
        version:
          type: string
          description: Version info of the application
        appDescription:
          type: string
          minLength: 16
          maxLength: 256
          description: Brief application description provided by application provider
        mobilitySupport:
          $ref: '#/components/schemas/MobilitySupport'
        accessToken:
          type: string
          pattern: ^[A-Za-z][A-Za-z0-9_]{31,63}$
          description: An application Access key, to be used with UNI interface to authorize UCs Access to a given application
        category:
          type: string
          enum:
            - IOT
            - HEALTH_CARE
            - GAMING
            - VIRTUAL_REALITY
            - SOCIALIZING
            - SURVEILLANCE
            - ENTERTAINMENT
            - CONNECTIVITY
            - PRODUCTIVITY
            - SECURITY
            - INDUSTRIAL
            - EDUCATION
            - OTHERS
          description: Possible categorization of the application
    AppQoSProfile:
      description: Parameters corresponding to the performance constraints, tenancy details etc.
      type: object
      required:
        - latencyConstraints
      properties:
        latencyConstraints:
          $ref: '#/components/schemas/LatencyConstraints'
        bandwidthRequired:
          $ref: '#/components/schemas/BandwidthRequired'
        multiUserClients:
          $ref: '#/components/schemas/MultiUserClients'
        noOfUsersPerAppInst:
          $ref: '#/components/schemas/NoOfUsersPerAppInst'
        appProvisioning:
          $ref: '#/components/schemas/AppProvisioning'

    EdgeAppFQDN:
      type: string
      description: DNS FQDN assigned to application instances in an availability zone. User Clients can resolve the FQDN to communicate with the edge instances of the application
    
    ClientLocation:
      type: object
      minProperties: 1
      properties:
        geo_location:
          type: string
          description: Latitude, Longitude as decimal fraction up to 4 digit precision
          pattern: ^([-+]?)([\d]{1,2})(((\.)(\d+)(,)))(\s*)(([-+]?)([\d]{1,3})((\.)(\d+))?)$
        rad_location:
          description: Information about the 4G/5G Cell ids where the client is currently served.
          type: array
          items:
            type: object
            required:
              - carrier
              - mcc
              - mnc
              - cellId
            properties:
              carrier:
                type: string
                enum:
                  - 5G
                  - LTE
              mcc:
                type: integer
                minimum: 1
                maximum: 999
                description: Mobile country code of the network as broadcasted in the serving cell
              mnc:
                type: integer
                minimum: 1
                maximum: 999
                description: Mobile network code of the network as broadcasted in the serving cell
              cellId:
                type: integer
                description: it could be a CGI (if carrier is LTE) or NCGI (if carrier is 5G).
              areaCode:
                type: integer
                description: Routing area code or Traffic area code where client is being served.
    CompEnvParams:
      description: Environment variables are key value pairs that should be injected when component in instantiated
      type: object
      required:
        - envVarName
        - envValueType
      properties:
        envVarName:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
          description: Name of environment variable
        envValueType:
          type: string
          enum:
            - USER_DEFINED
            - PLATFORM_DEFINED_DYNAMIC_PORT
            - PLATFORM_DEFINED_DNS
            - PLATFORM_DEFINED_IP
        envVarValue:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
          description: Value to be assigned to environment variable
        envVarSrc:
          type: string
          description: Full path of parameter from componentSpec that should be used to generate the environment value. Eg. networkResourceProfile[1]. interfaceId.
    CommandLineParams:
      description: List of commands and arguments that shall be invoked when the component instance is created. This is valid only for container based deployment.
      type: object
      required:
        - command
      properties:
        command:
          type: array
          items:
            type: string
          description: List of commands that application should invoke when an instance is created.
        commandArgs:
          type: array
          items:
            type: string
          description: List of arguments required by the command.
    DeploymentConfig:
      description: Configuration used when deploying a component. May override other ComponentSpec parameters related to deployment like restart policy, command line parameters, environment variables, etc.
      type: object
      required:
        - configType
        - contents
      properties:
        configType:
          type: string
          enum:
            - DOCKER_COMPOSE
            - KUBERNETES_MANIFEST
            - CLOUD_INIT
            - HELM_VALUES
          description: Config type.
        contents:
          type: string
          description: Contents of the configuration.

    ComponentSpec:
      description: Details about compute, networking and storage requirements for each component of the application. App provider should define all information needed to instantiate the component. If artefact is being defined at component level this section should have information just about the component. In case the artefact is being defined at application level the section should provide details about all the components.
      type: object
      required:
        - componentName
        - images
        - numOfInstances
        - restartPolicy
        - computeResourceProfile
      properties:
        componentName:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
          description: Must be a valid RFC 1035 label name.  Component name must be unique with an application
        images:
          description: List of all images associated with the component. Images are specified using the file identifiers. Partner OP provides these images using file upload api.
          type: array
          items:
            $ref: '#/components/schemas/FileId'
          minItems: 1
        numOfInstances:
          type: integer
          format: int32
          description: Number of component instances to be launched.
        restartPolicy:
          type: string
          enum:
            - RESTART_POLICY_ALWAYS
            - RESTART_POLICY_NEVER
          description: How the platform shall handle component failure
        commandLineParams:
          $ref: '#/components/schemas/CommandLineParams'
        exposedInterfaces:
          description: Each application component exposes some ports either for external users or for inter component communication. Application provider is required to specify which ports are to be exposed and the type of traffic that will flow through these ports.
          type: array
          items:
            $ref: '#/components/schemas/InterfaceDetails'
          minItems: 1
        computeResourceProfile:
          $ref: '#/components/schemas/ComputeResourceInfo'
        compEnvParams:
          type: array
          items:
            $ref: '#/components/schemas/CompEnvParams'
        deploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
        persistentVolumes:
          description: The ephemeral volume a container process may need to temporary store internal data
          type: array
          items:
            $ref: '#/components/schemas/PersistentVolumeDetails'
          minItems: 1
    ComputeResourceInfo:
      type: object
      required:
        - cpuArchType
        - numCPU
        - memory
      properties:
        cpuArchType:
          type: string
          enum:
            - ISA_X86_64
            - ISA_ARM_64
          description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.
        numCPU:
          $ref: '#/components/schemas/Vcpu'
        memory:
          type: integer
          format: int64
          description: Amount of RAM in Mbytes
        diskStorage:
          type: integer
          format: int32
          description: Amount of disk storage in Gbytes for a given ISA type
        gpu:
          type: array
          items:
            $ref: '#/components/schemas/GpuInfo'
        vpu:
          type: integer
          description: Number of Intel VPUs available for a given ISA type
        fpga:
          type: integer
          description: Number of FPGAs available for a given ISA type
        hugepages:
          type: array
          items:
            $ref: '#/components/schemas/HugePage'
        cpuExclusivity:
          type: boolean
          description: Support for exclusive CPUs

    nodeDiscoveryResponse:
      type: object
      required:
        - edgeNodes
        - discoveredAppInsts
      properties:
        edgeNodes:
          $ref: '#/components/schemas/DiscoveredEdgeNodes'
        discoveredAppInsts:
          $ref: '#/components/schemas/DiscoveredAppInsts'
      description: Candidate availability zones and details of already running instances of the given application


    DiscoveredEdgeNodes:
      type: array
      items:
        type: object
        required:
          - zoneId
          - latencyServiceEndPoints
        properties:
          zoneId:
            $ref: '#/components/schemas/ZoneIdentifier'
          latencyServiceEndPoints:
            $ref: '#/components/schemas/ServiceEndpoint'
      minItems: 1
      description: List of candidate zones where application instance could be created. LatencyServiceEndpoint is responsible for responding to latency measurement request from client


    DiscoveredAppInsts:
      type: array
      items:
        type: object
        required:
          - appId
          - appProviderId
          - appInstances
        properties:
          appId:
            $ref: '#/components/schemas/AppIdentifier'
          appProviderId:
            $ref: '#/components/schemas/AppProviderId'
          appInstances:
            type: array
            items:
              type: object
              required:
                - instancesInfo
              properties:
                instancesInfo:
                  type: object
                  required:
                    - zoneId
                    - appProviderId
                  properties:
                    zoneId:
                      $ref: '#/components/schemas/ZoneIdentifier'
                    instanceDetails:
                      $ref: '#/components/schemas/InstanceDetails'                
            minItems: 1

    InstanceDetails:
      type: array
      items:
        type: object
        required:
          - appInstanceInfo
        properties:
          appInstanceInfo:
            type: object
            required:
              - instanceIdentifier
              - instanceState
            properties:
              instanceIdentifier:
                $ref: '#/components/schemas/InstanceIdentifier'
              instancestate:
                $ref: '#/components/schemas/InstanceState'
      minItems: 1


    FederationRequestData:
      type: object
      required:
        - initialDate
        - partnerStatusLink
      properties:
        origOPFederationId:
          $ref: '#/components/schemas/FederationIdentifier'
        origOPCountryCode:
          $ref: '#/components/schemas/CountryCode'
        origOPMobileNetworkCodes:
          $ref: '#/components/schemas/MobileNetworkIds'
        origOPFixedNetworkCodes:
          $ref: '#/components/schemas/FixedNetworkIds'
        initialDate:
          type: string
          format: date-time
          description: Time zone info of the federation initiated by the originating OP
        partnerStatusLink:
          $ref: '#/components/schemas/Uri'        
  
    FederationResponseData:
      type: object
      required:
        - federationContextId
        - platformCaps
      properties:
        partnerOPFederationId:
          $ref: '#/components/schemas/FederationIdentifier'
        partnerOPCountryCode:
          $ref: '#/components/schemas/CountryCode'
        federationContextId:
          $ref: '#/components/schemas/FederationContextId'
        edgeDiscoveryServiceEndPoint:
          $ref: '#/components/schemas/ServiceEndpoint'
        lcmServiceEndPoint:
          $ref: '#/components/schemas/ServiceEndpoint'
        partnerOPMobileNetworkCodes:
          $ref: '#/components/schemas/MobileNetworkIds'
        partnerOPFixedNetworkCodes:
          $ref: '#/components/schemas/FixedNetworkIds'
        offeredAvailabilityZones:
          type: array
          items:
            $ref: '#/components/schemas/ZoneDetails'
          minItems: 1
          description: List of zones, which the operator platform wishes to make available to developers/ISVs of requesting operator platform.
        platformCaps:
          $ref: '#/components/schemas/PlatformCaps'
        federationExpiryDate:
          type: string
          format: date-time
          description: Date and Time zone info of the existing federation expiry
        federationRenewalDate:
          type: string
          format: date-time
          description: Date and Time zone info of the existing federation renewal. Shall be less than federationExpiryDate

    dateAndTimeZoneObject:
      type: string
      format: date-time
      description: Date and Time zone info format
    Flavour:
      type: object
      required:
        - flavourId
        - cpuArchType
        - supportedOSTypes
        - numCPU
        - memorySize
        - storageSize
      properties:
        flavourId:
          $ref: '#/components/schemas/FlavourId'
        cpuArchType:
          $ref: '#/components/schemas/CPUArchType'
        supportedOSTypes:
          description: A list of operating systems which this flavour configuration can support e.g., RHEL Linux, Ubuntu 18.04 LTS, MS Windows 2012 R2.
          type: array
          items:
            $ref: '#/components/schemas/OSType'
          minItems: 1
        numCPU:
          type: integer
          format: int32
          description: Number of available vCPUs
        memorySize:
          type: integer
          format: int32
          description: Amount of RAM in Mbytes
        storageSize:
          type: integer
          format: int32
          description: Amount of disk storage in Gbytes
        gpu:
          type: array
          items:
            $ref: '#/components/schemas/GpuInfo'
        fpga:
          type: integer
          format: int32
          description: Number of FPGAs

        vpu:
          type: integer
          description: Number of Intel VPUs available
        hugepages:
          type: array
          items:
            $ref: '#/components/schemas/HugePage'
        cpuExclusivity:
          type: boolean
          description: Support for exclusive CPUs
    GpuInfo:
      type: object
      required:
        - gpuVendorType
        - gpuModeName
        - gpuMemory
        - numGPU
      properties:
        gpuVendorType:
          type: string
          enum:
            - GPU_PROVIDER_NVIDIA
            - GPU_PROVIDER_AMD
          description: GPU vendor name e.g. NVIDIA, AMD etc.
          example: Nvidia
        gpuModeName:
          type: string
          description: Model name corresponding to vendorType may include info e.g. for NVIDIA, model name could be “Tesla M60”, “Tesla V100” etc.
        gpuMemory:
          type: integer
          description: GPU memory in Mbytes
        numGPU:
          type: integer
          description: Number of GPUs
    HugePage:
      type: object
      required:
        - pageSize
        - number
      properties:
        pageSize:
          type: string
          enum:
            - 2MB
            - 4MB
            - 1GB
          description: Size of hugepage
        number:
          type: integer
          description: Total number of huge pages
    InterfaceDetails:
      type: object
      required:
        - interfaceId
        - commProtocol
        - commPort
        - visibilityType
      properties:
        interfaceId:
          type: string
          description: Each Port and corresponding traffic protocol exposed by the component is identified by a name. Application client on user device requires this to uniquely identify the interface.
          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
        commProtocol:
          type: string
          enum:
            - TCP
            - UDP
            - HTTP_HTTPS
          description: Defines the IP transport communication protocol i.e., TCP, UDP or HTTP
        commPort:
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          description: Port number exposed by the component. OP may generate a dynamic port towards the UCs corresponding to this internal port and forward the client traffic from dynamic port to container Port.
        visibilityType:
          description: Defines whether the interface is exposed to outer world or not i.e., external, or internal. If this is set to "external", then it is exposed to external applications otherwise it is exposed internally to edge application components within edge cloud. When exposed to external world, an external dynamic port is assigned for UC traffic and mapped to the internal container Port
          type: string
          enum:
            - VISIBILITY_EXTERNAL
            - VISIBILITY_INTERNAL
        network:
          type: string
          pattern: ^[A-Za-z][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
          description: Name of the network.  In case the application has to be associated with more than 1 network then app provider must define the name of the network on which this interface has to be exposed.  This parameter is required only if the port has to be exposed on a specific network other than default.
        InterfaceName:
          type: string
          pattern: ^[a-z][a-z0-9]{3}$
          description: Interface Name. Required only if application has to be attached to a network other than default.
    InvalidParam:
      type: object
      properties:
        param:
          type: string
        reason:
          type: string
      required:
        - param
    MobileNetworkIds:
      type: object
      properties:
        mcc:
          $ref: '#/components/schemas/Mcc'
        mncs:
          type: array
          items:
            $ref: '#/components/schemas/Mnc'
          minItems: 1
    ObjectRepoLocation:
      type: object
      properties:
        repoURL:
          $ref: '#/components/schemas/Uri'
        userName:
          type: string
          description: Username to access the repository
        password:
          type: string
          description: Password to access the repository
        token:
          type: string
          description: Authorization token to access the repository
    OSType:
      type: object
      required:
        - architecture
        - distribution
        - version
        - license
      properties:
        architecture:
          type: string
          enum:
            - x86_64
            - x86
          example: x86_64
        distribution:
          type: string
          enum:
            - RHEL
            - UBUNTU
            - COREOS
            - FEDORA
            - WINDOWS
            - OTHER

        version:
          type: string
          enum:
            - OS_VERSION_UBUNTU_2204_LTS
            - OS_VERSION_RHEL_8
            - OS_VERSION_RHEL_7
            - OS_VERSION_DEBIAN_11
            - OS_VERSION_COREOS_STABLE
            - OS_MS_WINDOWS_2012_R2
            - OTHER

        license:
          type: string
          enum:
            - OS_LICENSE_TYPE_FREE
            - OS_LICENSE_TYPE_ON_DEMAND
            - NOT_SPECIFIED

    RepoType:
      type: string
      enum:
        - PRIVATEREPO
        - PUBLICREPO
        - UPLOAD
      description: Artefact or file repository location. PUBLICREPO is used of public URLs like GitHub, Helm repo, docker registry etc., PRIVATEREPO is used for private repo managed by the application developer, UPLOAD is for the case when artefact/file is uploaded from MEC web portal.  OP should pull the image from ‘repoUrl' immediately after receiving the request and then send back the response. In case the repoURL corresponds to a docker registry, use docker v2 http api to do the pull.

    ArtefactName:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
      description: Name of the artefact.

    ArtefactVersionInfo:
      type: string
      description: Artefact version information

    ArtefactDescription:
      type: string
      maxLength: 256
      description: Brief description of the artefact by the application provider

    ArtefactVirtType:
      type: string
      enum:
        - VM_TYPE
        - CONTAINER_TYPE

    ArtefactFileName:
      type: string
      minLength: 8
      maxLength: 32
      description: Name of the file.

    ArtefactFileFormat:
      type: string
      enum:
        - ZIP
        - TAR
        - TEXT
        - TARGZ
      description: Artefacts like Helm charts or Terraform scripts may need compressed format.

    ArtefactDescriptorType:
      type: string
      enum:
        - HELM
        - TERRAFORM
        - ANSIBLE
        - SHELL
        - COMPONENTSPEC
      description: Type of descriptor present in the artefact.  App provider can either define either a Helm chart or a Terraform script or container spec.


    LatencyConstraints:
      type: string
      enum:
        - NONE
        - LOW
        - ULTRALOW
      description: Latency requirements for the application.Allowed values (non-standardized) are none, low and ultra-low. Ultra-Low may corresponds to range 15 - 30 msec, Low correspond to range 30 - 50 msec. None means 51 and above

    BandwidthRequired:
      type: integer
      format: int32
      minimum: 1
      description: Data transfer bandwidth requirement (minimum limit) for the application. It should in Mbits/sec

    MobilitySupport:
      type: boolean
      default: false
      description: Indicates if an application is sensitive to user mobility and can be relocated. Default is “FALSE”

    MultiUserClients:
      type: string
      enum:
        - APP_TYPE_SINGLE_USER
        - APP_TYPE_MULTI_USER
      description: Single user type application are designed to serve just one client. Multi user type application is designed to serve multiple clients

    NoOfUsersPerAppInst:
      type: integer
      default: 1
      description: Maximum no of clients that can connect to an instance of this application. This parameter is relevant only for application of type multi user
    AppProvisioning:
      type: boolean
      default: true
      description: Define if application can be instantiated or not

    AppComponents:
      description: An application may consist of more than one component. Each component is associated with a descriptor and may exposes its services externally or internally.  App providers are required to provide details about all these components, their associated descriptors and their DNS names.
      type: array
      items:
        type: object
        required:
          - componentName
        anyOf:
          - required:
            - serviceNameNB
          - required:
            - serviceNameEW
          - required:
            - artefactId
        properties:
          serviceNameNB:
            $ref: '#/components/schemas/ServiceNameNB'
          serviceNameEW:
            $ref: '#/components/schemas/ServiceNameEW'
          componentName:
            $ref: '#/components/schemas/ComponentName'
          artefactId:
            $ref: '#/components/schemas/ArtefactId'
      minItems: 1


    PersistentVolumeDetails:
      type: object
      required:
        - volumeSize
        - volumeMountPath
        - volumeName
      properties:
        volumeSize:
          type: string
          enum:
            - 10Gi
            - 20Gi
            - 50Gi
            - 100Gi
          description: size of the volume given by user (10GB, 20GB, 50 GB or 100GB)
        volumeMountPath:
          type: string
          description: Defines the mount path of the volume
        volumeName:
          type: string
          description: Human readable name for the volume
        ephemeralType:
          type: boolean
          default: false
          description: It indicates the ephemeral storage on the node and contents are not preserved if containers restarts
        accessMode:
          type: string
          enum:
            - RW
            - RO
          default: RW
          description: Values are RW (read/write) and RO (read-only)l
        sharingPolicy:
          type: string
          enum:
            - EXCLUSIVE
            - SHARED
          default: EXCLUSIVE
          description: Exclusive or Shared. If shared, then in case of multiple containers same volume will be shared across the containers.
    ProblemDetails:
      type: object
      properties:
        title:
          type: string
          description: Summary of the problem
        detail:
          type: string
          description: Specific detail of the issue
        cause:
          type: string
          description: Fixed string indicating cause of the issue
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 0
    ResourceReservationDuration:
      description: Time period for which resources are to be reserved starting from now
      type: object
      minProperties: 1
      properties:
        numOfDays:
          type: integer
          format: int32
          description: Number of days to be reserved
        numOfMonths:
          type: integer
          format: int32
          description: Number of months to be reserved
        numOfYears:
          type: integer
          format: int32
          description: Number of years to be reserved
    ServiceEndpoint:
      type: object
      required:
        - port
      anyOf:
        - required:
            - fqdn
        - required:
            - ipv4Addresses
        - required:
            - ipv6Addresses
      properties:
        port:
          $ref: '#/components/schemas/Port'
        fqdn:
          $ref: '#/components/schemas/EdgeAppFQDN'
        ipv4Addresses:
          type: array
          items:
            $ref: '#/components/schemas/Ipv4Addr'
          minItems: 1
        ipv6Addresses:
          type: array
          items:
            $ref: '#/components/schemas/Ipv6Addr'
          minItems: 1
    ZoneDetails:
      type: object
      required:
        - zoneId
        - geolocation
        - geographyDetails
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        geographyDetails:
          type: string
          description: Details about cities or state covered by the edge. Details about the type of locality for eg rural, urban, industrial etc. This information is defined in human readable form.
    ZoneRegistrationRequestData:
      type: object
      required:
        - acceptedAvailabilityZones
        - availZoneNotifLink
      properties:
        acceptedAvailabilityZones:
          type: array
          items:
            $ref: '#/components/schemas/ZoneIdentifier'
          minItems: 1
        availZoneNotifLink:
          $ref: '#/components/schemas/Uri'
    ZoneRegistrationResponseData:
      type: object
      required:
        - acceptedZoneResourceInfo
      properties:
        acceptedZoneResourceInfo:
          type: array
          items:
            $ref: '#/components/schemas/ZoneRegisteredData'

          minItems: 1
    ZoneRegisteredData:
      type: object
      required:
        - zoneId
        - reservedComputeResources
        - computeResourceQuotaLimits
        - flavoursSupported
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'
        reservedComputeResources:
          description: Resources exclusively reserved for the originator OP.
          type: array
          items:
            $ref: '#/components/schemas/ComputeResourceInfo'
          minItems: 1
        computeResourceQuotaLimits:
          description: Max quota on resources partner OP allows over reserved resources.
          type: array
          items:
            $ref: '#/components/schemas/ComputeResourceInfo'
          minItems: 1        
        flavoursSupported:
          type: array
          items:
            $ref: '#/components/schemas/Flavour'
          minItems: 1
        networkResources:
          type: object
          required:
            - egressBandWidth
            - dedicatedNIC
            - supportSriov
            - supportDPDK
          properties:
            egressBandWidth:
              type: integer
              format: int32
              description: Max dl throughput that this edge can offer. It is defined in Mbps.
            dedicatedNIC:
              type: integer
              format: int32
              description: Number of network interface cards which can be dedicatedly assigned to application pods on isolated networks. This includes virtual as well physical NICs
            supportSriov:
              type: boolean
              description: If this zone support SRIOV networks or not
            supportDPDK:
              type: boolean
              description: If this zone supports DPDK based networking.
        zoneServiceLevelObjsInfo:
          type: object
          description: It is a measure of the actual amount of data that is being sent over a network per unit of time and indicates máximum supported value for a zone
          required:
            - latencyRanges
            - jitterRanges
            - throughputRanges
          properties:
            latencyRanges:
              type: object
              properties:
                minLatency:
                  type: integer
                  format: int32
                  minimum: 1
                  description: The time for data/packet to reach from UC to edge application. It represent mínimum latency in milli seconds that may exist between UCs and edge apps in this zone but it can be higher in actual.
                maxLatency:
                  type: integer
                  format: int32
                  description: The maximum limit of latency between UC and Edge App in milli seconds.
            jitterRanges:
              type: object
              properties:
                minJitter:
                  type: integer
                  format: int32
                  minimum: 1
                maxJitter:
                  type: integer
                  format: int32
                  description: The maximum limit of network jitter between UC and Edge App in milli seconds.
            throughputRanges:
              type: object
              properties:
                minThroughput:
                  type: integer
                  format: int32
                  minimum: 1
                  description: The minimum limit of network throughput between UC and Edge App in Mega bits per seconds (Mbps).
                maxThroughput:
                  type: integer
                  format: int32
                  description: The maximum limit of network throughput between UC and Edge App in Mega bits per seconds (Mbps).
   
              #
              # HTTP responses
              #
  responses:
    "400":
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "401":
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "404":
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "409":
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "412":
      description: Precondition Failed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "422":
      description: Unprocessable Entity
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "500":
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "501":
      description: Not Implemented
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "503":
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "520":
      description: Web Server Returned an Unknown Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    "400BadRequest":
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            InvalidFedParameters:
              description: Sufficient parameters must be specified to allow the partner OP to validate federation request 
              value:
                { 
                  "title": "Insufficient parameters",
                  "details": "Incorrect values received in federation request",
                  "cause": "INVALID_FED_RQST_PARAMS"
                }

    "404NotFound":
      description: Resource Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            FederationContextNotFound:
              description: Federation context does not exist 
              value:
                { 
                  "title": "Federation context Id not found",
                  "details": "Partner OP does not recognize the federationContextId from Originating OP",
                  "cause": "INVALID_FED_CTX_ID"
                }
            FederationNotFound:
              description: Federation terminated parmanently 
              value:
                { 
                  "title": "Federation context Id not found",
                  "details": "Partner OP does not recognize the federationContextId from Originating OP",
                  "cause": "FED_PERMANENTLY_TERMINAT"
                }
            ZoneNotFound:
              description: Zone Not Found 
              value:
                { 
                  "title": "Requested Zone Id not found",
                  "details": "Requested zone by the Originating OP does not exist with Partner OP",
                  "cause": "ZONE_ID_NOT_FOUND"
                }
            AppNotFound:
              description: Application Not Found 
              value:
                { 
                  "title": "Requested Application Id not found",
                  "details": "Requested Application by the Originating OP does not exist with Partner OP",
                  "cause": "APP_ID_NOT_FOUND"
                }
            AppInstNotFound:
              description: Application Instance Not Found 
              value:
                { 
                  "title": "Requested App instance Id not found",
                  "details": "Requested application instance by the Originating OP does not exist with Partner OP",
                  "cause": "APP_INST_NOT_FOUND"
                }


    default:
      description: Generic Error
paths:
  /federation-resources:
    get:
      summary: Retrieves REST APIs supported by an OP for federation services.
      operationId: GetFederationAPIs
      tags:
        - FederationAPIManagement
      responses:
        "200":
          description: Federation meta-info request accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - federationSupportedAPIs
                properties:
                  federationSupportedAPIs:
                    $ref: '#/components/schemas/FederationSupportedAPIs'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /partner:
    post:
      summary: Creates one direction federation with partner operator platform.
      operationId: CreateFederation
      tags:
        - FederationManagement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FederationRequestData'
      responses:
        "200":
          description: Federation meta-info request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationResponseData'
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according to the structure: {apiRoot}/operatorplatform/federation/v1/partner/{federationContextId}'
              required: true
              schema:
                type: string
            Accept-Encoding:
              description: Accept-Encoding, described in IETF RFC 7694
              schema:
                type: string
            Content-Encoding:
              description: Content-Encoding, described in IETF RFC 7231
              schema:
                type: string
        "400":
          $ref: '#/components/responses/400BadRequest'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onPartnerStatusEvent:
          '{$request.body#/partnerStatusLink }':
            post:
              requestBody:
                description: |
                  OP uses this callback api to notify partner OP about change in federation status, federation metadata or offered zone details. Allowed combinations of objectType and operationType are
                  - FEDERATION - STATUS: Status specified by parameter 'federationStatus'.
                  - ZONES - STATUS: Status specified by parameter 'zoneStatus'.
                  - ZONES - ADD: Use parameter 'addZones' to define add new zones
                  - ZONES - REMOVE: Use parameter 'removeZones' to define remove zones.
                  - EDGE_DISCOVERY_SERVICE - UPDATE: Use parameter 'edgeDiscoverySvcEndPoint' to specify new endpoints
                  - LCM_SERVICE - UPDATE: Use parameter 'lcmSvcEndPoint' to specify new endpoints
                  - MOBILE_NETWORK_CODES - ADD: Use parameter 'addMobileNetworkIds' to define new mobile network codes.
                  - MOBILE_NETWORK_CODES - REMOVE: Use parameter 'removeMobileNetworkIds' to remove mobile network codes.
                  - FIXED_NETWORK_CODES - ADD: Use parameter 'addFixedNetworkIds' to define new fixed network codes.
                  - FIXED_NETWORK_CODES - REMOVE: Use parameter 'removeFixedNetworkIds' to remove fixed network codes.
                  - SERVICE_APIS - ADD/REMOVE: Parameter Usage 'addServiceAPIs / removeServiceAPIs' to add or remove Service APIs support.

                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - objectType
                        - operationType
                        - modificationDate
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationContextId'   
                        objectType:
                          type: string
                          enum:
                            - FEDERATION
                            - ZONES
                            - EDGE_DISCOVERY_SERVICE
                            - LCM_SERVICE
                            - MOBILE_NETWORK_CODES
                            - FIXED_NETWORK_CODES
                            - SERVICE_APIS
                        operationType:
                          type: string
                          enum:
                            - STATUS
                            - UPDATE
                            - ADD
                            - REMOVE
                        edgeDiscoverySvcEndPoint:
                          $ref: '#/components/schemas/ServiceEndpoint'
                        lcmSvcEndPoint:
                          $ref: '#/components/schemas/ServiceEndpoint'
                        addMobileNetworkIds:
                          $ref: '#/components/schemas/MobileNetworkIds'
                        removeMobileNetworkIds:
                          $ref: '#/components/schemas/MobileNetworkIds'
                        addFixedNetworkIds:
                          $ref: '#/components/schemas/FixedNetworkIds'
                        removeFixedNetworkIds:
                          $ref: '#/components/schemas/FixedNetworkIds'
                        addZones:
                          type: array
                          items:
                            $ref: '#/components/schemas/ZoneDetails'
                          description: List of zones, which the operator platform wishes to make available to developers/ISVs of requesting operator platform.
                          minItems: 1
                        removeZones:
                          type: array
                          items:
                            $ref: '#/components/schemas/ZoneIdentifier'
                          description: List of zones, which the operator platform no longer wishes to share.
                          minItems: 1
                        addServiceAPIs:
                          $ref: '#/components/schemas/serviceAPINames'
                        removeServiceAPIs:
                          $ref: '#/components/schemas/serviceAPINames'
                        zoneStatus:
                          type: array
                          items:
                            type: object
                            required:
                              - zoneId
                              - status
                            properties:
                              zoneId:
                                $ref: '#/components/schemas/ZoneIdentifier'
                              status:
                                $ref: '#/components/schemas/Status'
                          minItems: 1
                        federationStatus:
                          $ref: '#/components/schemas/Status'
                        modificationDate:
                          type: string
                          format: date-time
                          description: Date and time of the federation modification by the originating partner OP
              responses:
                "204":
                  description: Expected response to a successful call back processing
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  
  /{federationContextId}/partner:
    get:
      summary: Retrieves details about the federation context with the partner OP. The response shall provide info about the zones offered by the partner, partner OP network codes, information about edge discovery and LCM service etc.
      operationId: GetFederationDetails
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      responses:
        "200":
          description: Federation meta-info request accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  edgeDiscoveryServiceEndPoint:
                    $ref: '#/components/schemas/ServiceEndpoint'
                  lcmServiceEndPoint:
                    $ref: '#/components/schemas/ServiceEndpoint'
                  allowedMobileNetworkIds:
                    $ref: '#/components/schemas/MobileNetworkIds'
                  allowedFixedNetworkIds:
                    $ref: '#/components/schemas/FixedNetworkIds'
                  offeredAvailabilityZones:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZoneDetails'
                    minItems: 1
                  platformCaps:
                    $ref: '#/components/schemas/PlatformCaps'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    patch:
      summary: API used by the Originating OP towards the partner OP, to update the parameters associated to the existing federation
      operationId: UpdateFederation
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        required: true
        description: Details about changes origination OP wished to apply
        content:
          application/json:
            schema:
              type: object
              required:
                - objectType
                - operationType
                - modificationDate
              properties:
                objectType:
                  type: string
                  enum:
                    - MOBILE_NETWORK_CODES
                    - FIXED_NETWORK_CODES
                operationType:
                  type: string
                  enum:
                    - ADD_CODES
                    - REMOVE_CODES
                    - UPDATE_CODES
                addMobileNetworkIds:
                  $ref: '#/components/schemas/MobileNetworkIds'
                removeMobileNetworkIds:
                  $ref: '#/components/schemas/MobileNetworkIds'
                addFixedNetworkIds:
                  $ref: '#/components/schemas/FixedNetworkIds'
                removeFixedNetworkIds:
                  $ref: '#/components/schemas/FixedNetworkIds'
                modificationDate:
                  type: string
                  format: date-time
                  description: Date and time of the federation modification by the originating partner OP
      responses:
        "200":
          description: Federation meta-info request accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  edgeDiscoveryServiceEndPoint:
                    $ref: '#/components/schemas/ServiceEndpoint'
                  lcmServiceEndPoint:
                    $ref: '#/components/schemas/ServiceEndpoint'
                  allowedMobileNetworkIds:
                    $ref: '#/components/schemas/MobileNetworkIds'
                  allowedFixedNetworkIds:
                    $ref: '#/components/schemas/FixedNetworkIds'
                  offeredAvailabilityZones:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZoneDetails'
                    minItems: 1
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Remove existing federation with the partner OP
      operationId: DeleteFederationDetails
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      responses:
        "200":
          description: Federation removed successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
          
  /fed-context-id:
    get:
      summary: Retrieves the existing federationContextId with partner operator platform.
      operationId: GetFederationContextId
      tags:
        - FederationManagement
      responses:
        "200":
          description: Federation context identifier retrieval request accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - FederationContextId
                properties:
                  FederationContextId:
                    $ref: '#/components/schemas/FederationContextId'
          headers:
            Location:
              description: 'Contains the URI of the existing resource, according to the structure: {apiRoot}/operatorplatform/federation/v1/partner/{federationContextId}'
              required: true
              schema:
                type: string
            Accept-Encoding:
              description: Accept-Encoding, described in IETF RFC 7694
              schema:
                type: string
            Content-Encoding:
              description: Content-Encoding, described in IETF RFC 7231
              schema:
                type: string
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/health:
    get:
      summary: Retrieves health status of the federation context with the Partner OP.
      operationId: GetFederationHealth
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      responses:
        "200":
          description: Federation health status information object
          content:
            application/json:
              schema:
                type: object
                required:
                  - federationHealthStatus
                properties:
                  federationHealthStatus:
                    $ref: '#/components/schemas/FederationHealthInfo'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/renew:
    post:
      summary: API used by the Originating OP to renew the existing federation
      operationId: RenewFederation
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      responses:
        "200":
          description: Federation renewal request accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - FederationContextId
                  - federationRenewalDate
                  - federationExpiryDate
                properties:
                  FederationContextId:
                    $ref: '#/components/schemas/FederationContextId'
                  federationRenewalDate:
                    $ref: '#/components/schemas/dateAndTimeZoneObject'
                  federationExpiryDate:
                    $ref: '#/components/schemas/dateAndTimeZoneObject'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

  /{federationContextId}/platform-caps:
    get:
      summary: Retrieves details about OP capabilities of the federated partner.
      operationId: GetPlatformCapabilities
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: capType
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/CapabilityID'

      responses:
        "200":
          description: Federation meta-info request accepted
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - required:
                    - deviceConnStatusChangeCap
                  - required:
                    - locationRetrievalCap
                  - required:
                    - userPlaneMgmtEvtCap
                  - required:
                    - dynamicQoSCap
                properties:
                  deviceConnStatusChangeCap:
                    $ref: '#/components/schemas/DeviceConnStatusChangeCap'
                  locationRetrievalCap:
                    $ref: '#/components/schemas/LocationRetrievalCap'
                  userPlaneMgmtEvtCap:
                    $ref: '#/components/schemas/UserPlaneMgmtEvtCap'
                  dynamicQoSCap:
                    $ref: '#/components/schemas/DynamicQoSCap'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'


  /{federationContextId}/partner/service/{serviceType}:
    get:
      summary: Retrieves the list of Service APIs and associated information that a partner OP supports 
      operationId: GetServiceAPIsDetails
      tags:
        - FederationManagement
      parameters:
        -   name: federationContextId
            in: path
            required: true
            schema:
                $ref:  '#/components/schemas/FederationContextId'
        -   name: serviceType
            in: path
            required: true
            schema:
                $ref:  '#/components/schemas/serviceType'
      responses:
        '200':
          description: List of Service APIs names and associated configuration info as supported capabilities
          content:
            application/json:
              schema:
                type: object
                required:
                  - ServiceType
                  - serviceCaps
                  - apiRoutingInfo
                properties:
                  serviceCaps:
                    $ref: '#/components/schemas/serviceAPINames'
                  serviceType:
                    $ref: '#/components/schemas/serviceType'
                  apiRoutingInfo:
                    $ref: '#/components/schemas/serviceRoutingInfo'
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404NotFound'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'

  /{federationContextId}/zones:
    post:
      summary: Originating OP informs partner OP that it is willing to access the specified zones and partner OP shall reserve compute and network resources for these zones.
      operationId: ZoneSubscribe
      tags:
        - AvailabilityZoneInfoSynchronization
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneRegistrationRequestData'
        required: true
      responses:
        "200":
          description: Zone registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneRegistrationResponseData'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onZoneResourceUpdateEvent:
          '{$request.body#/availZoneNotifLink}':
            post:
              requestBody:
                description: Notification about resource availability.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - zoneId
                        - zoneResUpdInfo
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationIdentifier'
                        zoneId:
                          $ref: '#/components/schemas/ZoneIdentifier'
                        zoneResUpdInfo:
                          type: array
                          items:
                            type: object
                            minProperties: 1
                            properties:
                              availableCompResources:
                                description: Resources exclusively reserved for the originator OP.
                                type: array
                                items:
                                  $ref: '#/components/schemas/ComputeResourceInfo'
                                minItems: 1
                              availableNetResources:
                                type: object
                                properties:
                                  egressBandWidth:
                                    type: integer
                                    format: int32
                                    description: Max dl throughput that this edge can offer. It is defined in Mbps.
                                  dedicatedNIC:
                                    type: integer
                                    format: int32
                                  supportSriov:
                                    type: boolean
                                    description: If this zone support SRIOV networks or not
                                  supportDPDK:
                                    type: boolean
                                    description: If this zone supports DPDK based networking
                                minProperties: 1
              responses:
                "200":
                  description: Zone info notification acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

  /{federationContextId}/zones/{zoneId}:
    delete:
      summary: Assert usage of a partner OP zone. Originating OP informs partner OP that it will no longer access the specified zone.
      operationId: ZoneUnsubscribe
      tags:
        - AvailabilityZoneInfoSynchronization
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Zone deregistered successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    get:
      summary: Retrieves details about the computation and network resources that partner OP has reserved for this zone.
      operationId: GetZoneData
      tags:
        - AvailabilityZoneInfoSynchronization
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Zone metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneRegisteredData'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/artefact:
    post:
      summary: Uploads application artefact on partner OP. Artefact is a zip file containing scripts and/or packaging files like Terraform or Helm which are required to create an instance of an application.
      operationId: UploadArtefact
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        description: An application can consist of multiple components. App providers are allowed to define separate artefacts for each component or they could define a consolidated artefact at application level.
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - artefactId
                - appProviderId
                - artefactName
                - artefactVersionInfo
                - artefactVirtType
                - artefactDescriptorType
                - componentSpec
              properties:
                artefactId:
                  $ref: '#/components/schemas/ArtefactId'
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                artefactName:
                  $ref: '#/components/schemas/ArtefactName'
                artefactVersionInfo:
                  $ref: '#/components/schemas/ArtefactVersionInfo'
                artefactDescription:
                  $ref: '#/components/schemas/ArtefactDescription'
                artefactVirtType:
                  $ref: '#/components/schemas/ArtefactVirtType'
                artefactFileName:
                  $ref: '#/components/schemas/ArtefactFileName'
                artefactFileFormat:
                  $ref: '#/components/schemas/ArtefactFileFormat'
                artefactDescriptorType:
                  $ref: '#/components/schemas/ArtefactDescriptorType'
                repoType:
                  $ref: '#/components/schemas/RepoType'
                artefactRepoLocation:
                  $ref: '#/components/schemas/ObjectRepoLocation'
                artefactFile:
                  type: string
                  format: binary
                  description: Helm archive/Terraform archive/container spec file or Binary image associated with an application component.
                componentSpec:
                  type: array
                  items:
                    $ref: '#/components/schemas/ComponentSpec'
                  minItems: 1
        required: true
      responses:
        "200":
          description: Artefact uploaded successfully
        "202":
          description: Artefact upload request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/artefact/{artefactId}:
    get:
      summary: Retrieves details about an artefact.
      operationId: GetArtefact
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: artefactId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ArtefactId'
      responses:
        "200":
          description: Artefact details
          content:
            application/json:
              schema:
                type: object
                required:
                  - artefactId
                  - appProviderId
                  - artefactName
                  - artefactVersionInfo
                  - artefactVirtType
                  - artefactDescriptorType
                properties:
                  artefactId:
                    $ref: '#/components/schemas/ArtefactId'
                  appProviderId:
                    $ref: '#/components/schemas/AppProviderId'
                  artefactName:
                    $ref: '#/components/schemas/ArtefactName'
                  artefactDescription:
                    $ref: '#/components/schemas/ArtefactDescription'
                  artefactVersionInfo:
                    $ref: '#/components/schemas/ArtefactVersionInfo'
                  artefactVirtType:
                    $ref: '#/components/schemas/ArtefactVirtType'
                  artefactFileName:
                    $ref: '#/components/schemas/ArtefactFileName'
                  artefactFileFormat:
                    $ref: '#/components/schemas/ArtefactFileFormat'
                  artefactDescriptorType:
                    $ref: '#/components/schemas/ArtefactDescriptorType'
                  repoType:
                    $ref: '#/components/schemas/RepoType'
                  artefactRepoLocation:
                    $ref: '#/components/schemas/ObjectRepoLocation'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Removes an artefact from partner OP.
      operationId: RemoveArtefact
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: artefactId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ArtefactId'
      responses:
        "200":
          description: Artefact deletion successful
        "202":
          description: Artefact deletion request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/files:
    post:
      summary: Uploads an image file. Originating OP uses this api to onboard an application image to partner OP.
      operationId: UploadFile
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - fileId
                - appProviderId
                - fileName
                - fileVersionInfo
                - fileType
                - imgOSType
                - imgInsSetArch
              properties:
                fileId:
                  $ref: '#/components/schemas/FileId'
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                fileName:
                  $ref: '#/components/schemas/FileName'
                fileDescription:
                  $ref: '#/components/schemas/FileDescription'
                fileVersionInfo:
                  $ref: '#/components/schemas/FileVersionInfo'
                fileType:
                  $ref: '#/components/schemas/VirtImageType'
                checksum:
                  type: string
                  description: MD5 checksum for VM and file-based images, sha256 digest for containers
                imgOSType:
                  $ref: '#/components/schemas/OSType'
                imgInsSetArch:
                  $ref: '#/components/schemas/CPUArchType'
                repoType:
                  $ref: '#/components/schemas/RepoType'

                fileRepoLocation:
                  $ref: '#/components/schemas/ObjectRepoLocation'
                file:
                  type: string
                  format: binary
                  description: Binary image associated with an application component.
        required: true
      responses:
        "200":
          description: File uploaded successfully
        "202":
          description: File upload request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/files/{fileId}:
    delete:
      summary: Removes an image file from partner OP.
      operationId: RemoveFile
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: fileId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FileId'
      responses:
        "200":
          description: Image deletion successful
        "202":
          description: Image deletion request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    get:
      summary: View an image file from partner OP.
      operationId: ViewFile
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: fileId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FileId'
      responses:
        "200":
          description: Image details
          content:
            application/json:
              schema:
                type: object
                required:
                  - fileId
                  - appProviderId
                  - fileName
                  - fileVersionInfo
                  - fileType
                  - imgOSType
                  - imgInsSetArch
                properties:
                  fileId:
                    $ref: '#/components/schemas/FileId'
                  appProviderId:
                    $ref: '#/components/schemas/AppProviderId'
                  fileName:
                    $ref: '#/components/schemas/FileName'
                  fileDescription:
                    $ref: '#/components/schemas/FileDescription'
                  fileVersionInfo:
                    $ref: '#/components/schemas/FileVersionInfo'
                  fileType:
                    $ref: '#/components/schemas/VirtImageType'
                  checksum:
                    type: string
                    description: MD5 checksum for VM and file-based images, sha256 digest for containers
                  imgOSType:
                    $ref: '#/components/schemas/OSType'
                  imgInsSetArch:
                    $ref: '#/components/schemas/CPUArchType'
                  repoType:
                    $ref: '#/components/schemas/RepoType'

                  fileRepoLocation:
                    $ref: '#/components/schemas/ObjectRepoLocation'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/onboarding:
    post:
      summary: Submits an application details to a partner OP. Based on the details provided,  partner OP shall do bookkeeping, resource validation and other pre-deployment operations.
      operationId: OnboardApplication
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        required: true
        description: Details about application compute resource requirements, associated artefacts, QoS profile and regions where application shall be made available etc.
        content:
          application/json:
            schema:
              type: object
              required:
                - appId
                - appProviderId
                - appMetaData
                - appQoSProfile
                - appComponentSpecs
              properties:
                appId:
                  $ref: '#/components/schemas/AppIdentifier'
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                appDeploymentZones:
                  description: Details about partner OP zones where the application should be made available;  This field when specified will instruct the OP to restrict application instantiation only on the listed zones.
                  type: array
                  items:
                    $ref: '#/components/schemas/ZoneIdentifier'
                  minItems: 1
                appMetaData:
                  $ref: '#/components/schemas/AppMetaData'
                appQoSProfile:
                  $ref: '#/components/schemas/AppQoSProfile'
                appComponentSpecs:
                  $ref: '#/components/schemas/AppComponentSpecs'
                appStatusCallbackLink:
                  $ref: '#/components/schemas/Uri'
                edgeAppFQDN:
                  $ref: '#/components/schemas/EdgeAppFQDN'

      responses:
        "200":
          description: Application onboarded successfully
        "202":
          description: Application onboarding request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onApplicationOnboardStatusEvent:
          '{$request.body#/appStatusCallbackLink}':
            post:
              requestBody:
                description: Notification payload.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - appId
                        - statusInfo
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationIdentifier'
                        appId:
                          $ref: '#/components/schemas/AppIdentifier'
                        statusInfo:
                          type: array
                          items:
                            type: object
                            required:
                              - zoneId
                              - onboardStatusInfo
                            properties:
                              zoneId:
                                $ref: '#/components/schemas/ZoneIdentifier'
                              onboardStatusInfo:
                                $ref: '#/components/schemas/OnboardStatusInfo'
                          minItems: 1
              responses:
                "204":
                  description: Application status updated
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

  /{federationContextId}/application/onboarding/app/{appId}:
    delete:
      summary: Deboards the application from all zones, if any, and deletes the App.
      operationId: DeleteApp
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
           $ref:  '#/components/schemas/AppIdentifier'
      responses:
        '200':
          description: App deletion successful
        '202':
          description: App deletion request accepted
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404NotFound'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'
    patch:
      summary: Updates partner OP about changes in application compute resource requirements, QOS Profile, associated descriptor or change in associated components
      operationId: UpdateApplication
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
      requestBody:
        required: true
        description: Details about application compute resource requirements, associated artefact and QOS profile that needs to be updated.
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              properties:
                appUpdQoSProfile:
                  description: Parameters corresponding to the performance constraints, tenancy details etc.
                  type: object
                  anyOf:
                    - required:
                        - latencyConstraint
                    - required:
                        - bandwidthRequired
                    - required:
                        - mobilitySupport
                    - required:
                        - multiUserClients
                    - required:
                        - appProvisioning
                  properties:
                    latencyConstraints:
                      $ref: '#/components/schemas/LatencyConstraints'
                    bandwidthRequired:
                      $ref: '#/components/schemas/BandwidthRequired'
                    mobilitySupport:
                      $ref: '#/components/schemas/MobilitySupport'
                    multiUserClients:
                      $ref: '#/components/schemas/MultiUserClients'
                    noOfUsersPerAppInst:
                      $ref: '#/components/schemas/NoOfUsersPerAppInst'
                    appProvisioning:
                      $ref: '#/components/schemas/AppProvisioning'
                appComponents:
                  $ref: '#/components/schemas/AppComponents'

      responses:
        "200":
          description: Application update successful
        "202":
          description: Application update request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    get:
      summary: Retrieves application details from partner OP
      operationId: ViewApplication
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
      responses:
        "200":
          description: Application details
          content:
            application/json:
              schema:
                type: object
                required:
                  - appId
                  - appProviderId
                  - appDeploymentZones
                  - appMetaData
                  - appQoSProfile
                  - appComponentSpecs
                  - onboardStatusInfo
                properties:
                  appId:
                    $ref: '#/components/schemas/AppIdentifier'
                  appProviderId:
                    $ref: '#/components/schemas/AppProviderId'
                  appDeploymentZones:
                    description: Details about partner OP zones where the application should be made available;  This field when specified will instruct the OP to restrict application instantiation only on the listed zones.
                    type: array
                    items:
                      type: object
                      required:
                        - countryCode
                        - zoneInfo
                      properties:
                        countryCode:
                          $ref: '#/components/schemas/CountryCode'
                        zoneInfo:
                          $ref: '#/components/schemas/ZoneIdentifier'
                    minItems: 1
                  appMetaData:
                    $ref: '#/components/schemas/AppMetaData'
                  appQoSProfile:
                    $ref: '#/components/schemas/AppQoSProfile'
                  appComponentSpecs:
                    $ref: '#/components/schemas/AppComponentSpecs'
                  onboardStatusInfo:
                    $ref: '#/components/schemas/OnboardStatusInfo'

        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/onboarding/app/{appId}/zone/{zoneId}:
    delete:
      summary: Deboards an application from specific partner OP zones
      operationId: DeboardApplication
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Application deboarded successfully
        "202":
          description: Application deboard request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/onboarding/app/{appId}/additionalZones:
    post:
      summary: Onboards an existing application to a new zone within partner OP.
      operationId: OnboardExistingAppNewZones
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
      requestBody:
        required: true
        description: Details about new zones where application shall be made available
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ZoneIdentifier'
              minItems: 1
      responses:
        "200":
          description: Application onboarding succussful
        "202":
          description: Application onboarding request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/onboarding/app/{appId}/zoneForbid:
    post:
      summary: Forbid/allow application instantiation on a partner zone
      operationId: LockUnlockApplicationZone
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                description: List of zones where application instantiation shall be forbidden or allowed.
              required:
                - zoneId
                - forbid
              properties:
                zoneId:
                  $ref: '#/components/schemas/ZoneIdentifier'
                forbid:
                  type: boolean
                  description: Value 'true' will forbid application instantiation on this zone.  No new instance of the application can be created on this zone.
              minItems: 1
      responses:
        "200":
          description: Application forbid/permit request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/lcm:
    post:
      summary: Instantiates an application on a partner OP zone.
      operationId: InstallApp
      tags:
        - ApplicationDeploymentManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: Idempotency-Key
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/TransactionId'

      requestBody:
        description: Details about application and zones where application instance should be created. It also definea call back URI which the partner OP shall use update home OP about a change in instance status.
        content:
          application/json:
            schema:
              type: object
              required:
                - appId
                - appProviderId
                - appVersion
                - zoneInfo
                - appInstCallbackLink
              properties:
                appId:
                  $ref: '#/components/schemas/AppIdentifier'
                appVersion:
                  type: string
                  description: Version info of the application                
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                zoneInfo:
                  type: object
                  required:
                    - zoneId
                    - flavourId
                  properties:
                    zoneId:
                      $ref: '#/components/schemas/ZoneIdentifier'
                    flavourId:
                      $ref: '#/components/schemas/FlavourId'
                    resourceConsumption:
                      type: string
                      enum:
                        - RESERVED_RES_SHALL
                        - RESERVED_RES_PREFER
                        - RESERVED_RES_AVOID
                        - RESERVED_RES_FORBID
                      default: RESERVED_RES_AVOID
                      description: Specifies if the application can be instantiated using pre-reserved resource or not.  App provider can pre-reserve a pool of compute resource on each zone.  'RESERVED_RES_SHALL' instruct OP to use only the pre-reserved resources. 'RESERVED_RES_PREFER' instruct to first try using pre-reserved resource, if none available go for non-reserved resources. 'RESERVED_RES_AVOID' instruct OP not to use pre-reserved resource if possible, it is a choice depending upon circumstances 'RESERVED_RES_FORBID' instruct OP not to use pre-reserved resources.
                    resPool:
                      type: string
                      pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                      description: Resource pool to be used for application instantiation on this zone.  Valid only if IE 'resourceConsumption' is set to 'RESERVED_RES_SHALL' or 'RESERVED_RES_PREFER'
                appInstCallbackLink:
                  $ref: '#/components/schemas/Uri'
      responses:
        "202":
          description: Application instance creation request accepted.
          content:
            application/json:
              schema:
                type: object
                required:
                  - zoneId
                  - appInstIdentifier
                properties:
                  zoneId:
                    $ref: '#/components/schemas/ZoneIdentifier'
                  appInstIdentifier:
                    $ref: '#/components/schemas/InstanceIdentifier'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onInstanceStatusEvent:
          '{$request.body#/appInstCallbackLink}':
            post:
              requestBody:
                description: Notification payload.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - appId
                        - appInstanceId
                        - zoneId
                        - appInstanceInfo
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationIdentifier'
                        appId:
                          $ref: '#/components/schemas/AppIdentifier'
                        appInstanceId:
                          $ref: '#/components/schemas/InstanceIdentifier'
                        zoneId:
                          $ref: '#/components/schemas/ZoneIdentifier'
                        appInstanceInfo:
                          type: object
                          properties:
                            appInstanceState:
                              type: string
                              enum:
                                - PENDING
                                - READY
                                - FAILED
                                - TERMINATING
                              description: Running status of the application instance.
                            message:
                              type: string
                              description: Event information or failure message.
                            accesspointInfo:
                              description: Information about the IP and Port exposed by the OP. Application clients shall use these access points to reach this application instance
                              type: array
                              items:
                                type: object
                                required:
                                  - interfaceId
                                  - accessPoints
                                properties:
                                  interfaceId:
                                    type: string
                                    pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                                    description: This is the interface Identifier that app provider defines when application is onboarded.
                                  accessPoints:
                                    $ref: '#/components/schemas/ServiceEndpoint'
                              minItems: 1
                          minProperties: 1
                        modificationDate:
                          type: string
                          format: date-time
                          description: Date and time of the instance state modification by partner OP.
              responses:
                "204":
                  description: Application instance state notification acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

  /{federationContextId}/application/lcm/app/{appId}/instance/{appInstanceId}/zone/{zoneId}:
    get:
      summary: Retrieves an application instance details from partner OP.
      operationId: GetAppInstanceDetails
      tags:
        - ApplicationDeploymentManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
        - name: appInstanceId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InstanceIdentifier'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Application instance details
          content:
            application/json:
              schema:
                type: object
                properties:
                  appInstanceState:
                    $ref: '#/components/schemas/InstanceState'
                  accesspointInfo:
                    description: Information about the IP and Port exposed by the OP. Application clients shall use these access points to reach this application instance
                    type: array
                    items:
                      type: object
                      required:
                        - interfaceId
                        - accessPoints
                      properties:
                        interfaceId:
                          type: string
                          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                          description: This is the interface identifier that app provider defines when application is onboarded.
                        accessPoints:
                          $ref: '#/components/schemas/ServiceEndpoint'
                    minItems: 1
                minProperties: 1
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Terminate an application instance on a partner OP zone.
      operationId: RemoveApp
      tags:
        - ApplicationDeploymentManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
        - name: appInstanceId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InstanceIdentifier'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Application instance termination request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/lcm/app/{appId}/appProvider/{appProviderId}:
    get:
      summary: Retrieves all application instance of partner OP
      operationId: GetAllAppInstances
      tags:
        - ApplicationDeploymentManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
        - name: appProviderId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppProviderId'
      responses:
        "200":
          description: Application Instance details
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - zoneId
                    - appInstanceInfo
                  properties:
                    zoneId:
                      $ref: '#/components/schemas/ZoneIdentifier'
                    appInstanceInfo:
                      type: array
                      items:
                        type: object
                        required:
                          - appInstIdentifier
                          - appInstanceState
                        properties:
                          appInstIdentifier:
                            $ref: '#/components/schemas/InstanceIdentifier'
                          appInstanceState:
                            $ref: '#/components/schemas/InstanceState'
                      minItems: 1
                minItems: 1
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/isv/resource/zone/{zoneId}/appProvider/{appProviderId}:
    post:
      summary: Reserves resources (compute, network and storage)  on a partner OP zone.   ISVs registered with home OP reserves resources on a partner OP zone.
      operationId: CreateResourcePools
      tags:
        - AppProviderResourceManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
        - name: appProviderId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppProviderId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - resRequest
                - resourceReservationCallbackLink
              properties:
                resRequest:
                  description: Compute flavours to be reserved and their time duration
                  type: object
                  required:
                    - poolName
                    - flavours
                    - reserveDuration
                  properties:
                    poolName:
                      $ref: '#/components/schemas/PoolName'
                    flavours:
                      type: array
                      items:
                        type: object
                        required:
                          - flavourId
                          - numFlavour
                        properties:
                          flavourId:
                            $ref: '#/components/schemas/FlavourId'
                          numFlavour:
                            type: integer
                            format: int32
                            description: Total number of flavours to be reserved
                          minNumOfFlavours:
                            type: integer
                            format: int32
                            description: If specified, indicate the minimum numbers of flavours to be reserved up to maximum as given in “count” member. If partner OP cannot reserve the minimum number of flavours, then the request shall fail.
                      minItems: 1
                    reserveDuration:
                      $ref: '#/components/schemas/ResourceReservationDuration'
                resourceReservationCallbackLink:
                  $ref: '#/components/schemas/Uri'
      responses:
        "200":
          description: ISV Resource reservation request accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - poolId
                  - poolName
                properties:
                  poolName:
                    $ref: '#/components/schemas/PoolName'

                  poolId:
                    $ref: '#/components/schemas/PoolId'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onResourceStatusChangeEvent:
          '{$request.body#/resourceReservationCallbackLink}':
            post:
              requestBody:
                description: Notification payload.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - zoneId
                        - appProviderId
                        - poolId
                        - grantedFlavours
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationIdentifier'
                        zoneId:
                          $ref: '#/components/schemas/ZoneIdentifier'
                        appProviderId:
                          $ref: '#/components/schemas/AppProviderId'
                        poolId:
                          $ref: '#/components/schemas/PoolId'
                        grantedFlavours:
                          type: array
                          items:
                            type: object
                            required:
                              - flavourId
                              - numFlavour
                            properties:
                              flavourId:
                                $ref: '#/components/schemas/FlavourId'
                              numFlavour:
                                type: integer
                                format: int32
                                description: Count of flavour
                          minItems: 1
              responses:
                "204":
                  description: Updated Resource reservation status updated
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

    get:
      summary: Retrieves the resource pool reserved by an ISV
      operationId: ViewISVResPool
      tags:
        - AppProviderResourceManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
        - name: appProviderId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppProviderId'
      responses:
        "200":
          description: Reserved Resources Details
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - poolName
                    - reservedPoolId
                    - reservedFlavours
                  properties:
                    poolName:
                      $ref: '#/components/schemas/PoolName'                    
                    reservedPoolId:
                      $ref: '#/components/schemas/PoolId'
                    reservedFlavours:
                      type: array
                      items:
                        type: object
                        required:
                          - flavourId
                          - count
                        properties:
                          flavourId:
                           $ref: '#/components/schemas/FlavourId'         
                          count:
                            type: integer
                            format: int32
                            description: Total number of flavours reserved
                      minItems: 1
                    reserveDuration:
                      $ref: '#/components/schemas/ResourceReservationDuration'
                    reservationTime:
                      type: string
                      format: date-time
                      description: Date and time when resources were reserved in UTC format
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/isv/resource/zone/{zoneId}/appProvider/{appProviderId}/pool/{poolId}:
    patch:
      summary: Updates resources reserved for a pool by an ISV
      operationId: UpdateISVResPool
      tags:
        - AppProviderResourceManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
        - name: appProviderId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppProviderId'
        - name: poolId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PoolId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - updateType
                  - flavourId
                  - count
                properties:
                  updateType:
                    type: string
                    enum:
                      - ADD
                      - REMOVE
                      - DURATION
                    description: Specify if resource corresponding this flavour needs to added or removed. Field 'count' gives the final total no of such flavours that should be reserved.  count 0 means remove all the resources.
                  flavourId:
                    $ref: '#/components/schemas/FlavourId'
                  count:
                    type: integer
                    format: int32
                    description: Total number of flavours to be reserved
                  reserveDuration:
                    $ref: '#/components/schemas/ResourceReservationDuration'
      responses:
        "200":
          description: Resource pool updated
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Deletes the resource pool reserved by an ISV
      operationId: RemoveISVResPool
      tags:
        - AppProviderResourceManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
        - name: appProviderId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppProviderId'
        - name: poolId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PoolId'
      responses:
        "200":
          description: Resource pool deleted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

  /{federationContextId}/edgenodesharing/edgeDiscovery:
    post:
      summary: Edge discovery procedures towards partner OP over E/WBI. Originating OP request partner OP to provide a list of candidate zones where an application instance can be created. Partner OP applies a set of filtering criteria's to select candidate zones.
      operationId: GetCandidateZones
      tags:
        - EdgeNodeSharing
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - appProviderId
                - appId
              properties:
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                appId:
                  $ref: '#/components/schemas/AppIdentifier'
                edgeDiscoveryFilters:
                  type: object
                  minProperties: 1
                  properties:
                    location:
                      $ref: '#/components/schemas/ClientLocation'
      responses:
        "200":
          description: List of candidate zones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeDiscoveryResponse'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/default'

  /{federationContextId}/apiservice/{serviceAPINameVal}:
    post:
      summary: Service API request forwarding to the Partner OP 
      operationId: APIForwarding
      tags:
        - ServiceAPIManagement
      parameters:
        -   name: federationContextId
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/FederationContextId'

        -   name: serviceAPINameVal
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/serviceAPINameVal'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - apiServiceId
                - customerID
                - customerInfo
                - txnIdentifier
                - ServiceAPIBody
              properties:
                customerID:
                  $ref: '#/components/schemas/customerID'
                txnIdentifier:
                  $ref: '#/components/schemas/txnIdentifier'
                ServiceAPIBody:
                  $ref: '#/components/schemas/serviceAPIContent'
                eventNotificationDest:
                  $ref: '#/components/schemas/Uri'
      responses:
        '200':
          description: Service API request accepted
          headers:
            Location:
              description: Contains the URI of the newly created Service API Context resource.
              required: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceAPIResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        default:
            $ref: '#/components/responses/default'
      callbacks:
        onServiceAPISessionEvent:
          '{$request.body#/eventNotificationDest}':
            post:
              parameters:
                - name: federationContextId
                  in: path
                  required: true
                  schema:
                    $ref:  '#/components/schemas/FederationContextId'
                - name: apiServiceId
                  in: path
                  required: true
                  schema:
                    $ref:  '#/components/schemas/serviceAPINames'
              requestBody:
                description: Notification about network event.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - txnIdentifier
                        - serviceAPIEvent
                      properties:
                        serviceAPIEvent:
                          $ref:  '#/components/schemas/serviceAPINetworkEvent'
                        txnIdentifier:
                          $ref:  '#/components/schemas/txnIdentifier'
              responses:
                '200':
                  description: Event info notification acknowledged
                '400':
                  $ref: '#/components/responses/400'
                '401':
                  $ref: '#/components/responses/401'
                '404':
                  $ref: '#/components/responses/404'
                '409':
                  $ref: '#/components/responses/409'
                '422':
                  $ref: '#/components/responses/422'
                '500':
                  $ref: '#/components/responses/500'
                '503':
                  $ref: '#/components/responses/503'
                '520':
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  
          
  /{federationContextId}/apiservice/connid/{connectID}/custid/{customerID}:
    delete:
      summary: Remove the Service API Session earlier created with Service API forwarding request.
      operationId: RemoveServiceAPISession
      tags:
        - ServiceAPIManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/FederationContextId'
        - name: connectID
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/connectID'
        - name: customerID
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/customerID'

      responses:
        '200':
          description: Service API Session removed successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - expiryDuration
                  - connectID
                properties:
                  expiryDuration:
                    $ref: '#/components/schemas/expiryInterval'
                  connectID:
                    $ref: '#/components/schemas/connectID'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    get:
      summary: Retrieve the Service API context information of an existing API session identified by connectID, customerID
      operationId: GetServiceAPISessionInfo
      tags:
        - ServiceAPIManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: connectID
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/connectID'
        - name: customerID
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/customerID'

      responses:
        "200":
          description: Device Auth Token validated
          content:
            application/json:
              schema:
                type: object
                required:
                  - expiryDuration
                  - connectID
                properties:
                  expiryDuration:
                    $ref: '#/components/schemas/expiryInterval'
                  connectID:
                    $ref: '#/components/schemas/connectID'
                  ServiceAPIRespBody:
                    $ref: '#/components/schemas/serviceAPIContent'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        default:
          $ref: '#/components/responses/default'

  /{federationContextId}/monioring-subscriptions:
    post:
      summary: Originating OP subscribe for edge cloud resource monitoring info with partner OP.
      operationId: SubscribeMonitoringInfo
      tags:
        - ConsumptionReportingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: monType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/monitoringSubsType'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                periodicity:
                  $ref: '#/components/schemas/periodicityInterval'
                resMonNotificationListner:
                  $ref: '#/components/schemas/Uri'

      responses:
        "200":
          description: Subscription for resource monitoring created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceSubscriptionInfo'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onPeriodicMonitoringEvent:
          '{$request.body#/resMonNotificationListner}':
            post:
              requestBody:
                description: Periodic Notification about resource monitoring info.
                content:
                  application/json:
                    schema:
                      anyOf:
                        - $ref: '#/components/schemas/edgeResUtilizeMetrics'
                        - $ref: '#/components/schemas/appsResUtilizeInfo'
              responses:
                "200":
                  description: Resource monitoring info notification acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

  /{federationContextId}/events:
    post:
      summary: Originating OP uses this procedure to request enabling event reporting with Partner OP.
      operationId: CreateEventSubscription
      tags:
        - EventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                eventSubscriptionConfig:
                  $ref: '#/components/schemas/EventSubscription'
      responses:
        "200":
          description: Subscription for reporting of events created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionInfo'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onEventCriterionDetectionEvent:
          '{$request.body#/eventListner}':
            post:
              requestBody:
                description: Notification about event being detected as per event criterion.
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/EventsList'
              responses:
                "200":
                  description: Event report acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

  /{federationContextId}/events/{event_subs_id}:
    post:
      summary: Originating OP uses this procedure to create an event criterion at Partner OP.
      operationId: CreateEventCriterion
      tags:
        - EventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: event_subs_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventSubscriptionIdentifier'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                eventCriterion:
                  $ref: '#/components/schemas/eventCriterion'
      responses:
        "200":
          description: Subscription for resource monitoring created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventInfo'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

    get:
      summary: Retrieves events list with the partner OP.
      operationId: GetEventsList
      tags:
        - EventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: event_subs_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventSubscriptionIdentifier'
        - name: event_type
          in: query
          required: false
          schema:
            type: string
            enum:
              - event_criterion
              - event_id
      responses:
        "200":
          description: Events criterion and detected events report request accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  eventCriterionList:
                    $ref: '#/components/schemas/eventTypeList'
                  eventIdList:
                    $ref: '#/components/schemas/EventsList'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

    delete:
      summary: Remove existing event subscription with the partner OP
      operationId: DeleteEventSubscription
      tags:
        - EventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: event_subs_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventSubscriptionIdentifier'

      responses:
        "200":
          description: Event subscription removed successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

  /{federationContextId}/events/{event_subs_id}/event-id/{eventId}:
    delete:
      summary: Remove existing event criterion with the partner OP
      operationId: DeleteEventCriterion
      tags:
        - EventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: event_subs_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventSubscriptionIdentifier'
        - name: eventId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventIdentifier'
      responses:
        "200":
          description: Event criterion removed successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

  /{federationContextId}/alarms:
    post:
      summary: Originating OP uses this procedure to request enabling alarm reporting with Partner OP.
      operationId: CreateAlarmReportingSubscription
      tags:
        - AlarmManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                alarmListnerCallback:
                  $ref: '#/components/schemas/Uri'

      responses:
        "200":
          description: Subscription for alarm reporting created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionIdentifier'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onAlarmStateReportEvent:
          '{$request.body#/alarmListnerCallback}':
            post:
              requestBody:
                description: Notification about alarm management events at Partner OP.
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AlarmObjectInfo'
              responses:
                "200":
                  description: Event report acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

            delete:
              requestBody:
                description: Alarm clear notification for an earlier alarm by Partner OP.
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AlarmObjectInfo'
              responses:
                "200":
                  description: Alarm clear event acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

            patch:
              requestBody:
                description: Notification about alarm management events at Partner OP.
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdatedAlarmParameters'
              responses:
                "200":
                  description: Alarm state update report acknowledged
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          updatedAlarmId:
                            $ref: '#/components/schemas/AlarmIdentifier'
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  


  /{federationContextId}/events/{alarm_subs_id}:
    get:
      summary: Retrieves active alarms list with the partner OP.
      operationId: GetAlarmsList
      tags:
        - AlarmManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: alarm_subs_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionIdentifier'
        - name: alarm_type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/AlarmType'
      responses:
        "200":
          description: Active alarms report request accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  activeAlarmsList:
                    $ref: '#/components/schemas/ActiveAlarmsList'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

    delete:
      summary: Remove existing alarm subscription with the partner OP
      operationId: DeleteAlarmSubscription
      tags:
        - AlarmManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: alarm_subs_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionIdentifier'

      responses:
        "200":
          description: Alarm subscription removed successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'


  /{federationContextId}/network-caps-events:
    post:
      summary: Originating OP uses this procedure to request enabling network capabilities events reporting by the Partner OP.
      operationId: CreateNetworkCapsEventSubscription
      tags:
        - NetworkCapsEventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - networkCapsEventSubscriptionConfig
              properties:
                networkCapsEventSubscriptionConfig:
                  $ref: '#/components/schemas/periodicNotifConfig'
      responses:
        "200":
          description: Subscription for notification of network events created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/periodicNotifConfig'
          headers:
            Location:
              description: 'Contains the URI of the newly created resource'
              required: true
              schema:
                type: string
            Accept-Encoding:
              description: Accept-Encoding, described in IETF RFC 7694
              schema:
                type: string
            Content-Encoding:
              description: Content-Encoding, described in IETF RFC 7231
              schema:
                type: string
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onNetwEventDetectionEvent:
          '{$request.body#/notificationListner}':
            post:
              requestBody:
                description: Notification about events being detected as per network capabilities are applied by Partner OP.
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/NetworkCapAppInfoList'
              responses:
                "200":
                  description: Network Events report acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
              security:
                - notifClientCredentials: [fed-mgmt-notif]  

  /{federationContextId}/network-events/{nw-event-subs-id}:
    post:
      summary: Originating OP uses this procedure to add an intent to Partner OP to report network capability applied by Partner OP.
      operationId: CreateNetworkCapEvent
      tags:
        - NetworkCapsEventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: nw-event-subs-id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventSubscriptionIdentifier'
        - name: nw-cap-id
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CapabilityID'

      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - appId
                - appProviderId             
              properties:
                appId:
                  $ref: '#/components/schemas/AppIdentifier'
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                txnIdentifier:
                  $ref: '#/components/schemas/txnIdentifier'

      responses:
        "200":
          description: Subscription for network event created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - networkCapSubsInfo
                  - txnIdentifier
                properties:
                  networkCapSubsInfo:
                    $ref: '#/components/schemas/NetworkCapSubsInfo'
                  txnIdentifier:
                    $ref: '#/components/schemas/txnIdentifier'

        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

    delete:
      summary: Remove existing network events notification subscription with the partner OP
      operationId: DeleteNwEventNotifSubscription
      tags:
        - NetworkCapsEventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: nw-event-subs-id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventSubscriptionIdentifier'
      responses:
        "200":
          description: Network Event Notification subscription removed successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

  /{federationContextId}/network-events/{nw-event-subs-id}/nw-caps:
    get:
      summary: Retrieves network capabilities subscribed list with the partner OP.
      operationId: GetNetworkCapsSubscribedList
      tags:
        - NetworkCapsEventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: nw-event-subs-id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventSubscriptionIdentifier'
        - name: nw-event-type
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Network capabilities subscription list returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscribedNwCaps:
                    type: array
                    items:
                      $ref: '#/components/schemas/NetworkCapSubsInfo'
                    minItems: 1
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'

    delete:
      summary: Remove existing network event notification with the partner OP
      operationId: DeleteNetworkCapSubscription
      tags:
        - NetworkCapsEventManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: nw-event-subs-id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EventSubscriptionIdentifier'
        - name: nw-event-id
          in: query
          required: true
          schema:
            type: string 
      responses:
        "200":
          description: Network Event subscription removed successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404NotFound'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
