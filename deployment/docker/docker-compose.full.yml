services:
  federator-oo:
    container_name: ${BASE_URL_OO}
    build:
      context: .
      dockerfile: ./deployment/docker/Dockerfile
    environment:
      OPERATOR_ID: ${OPERATOR_ID_OO}
      API_PORT: ${API_PORT_OO}
      BASE_URL: ${BASE_URL_OO}
      MONGO_HOST: ${MONGO_HOST_OO}
      MONGO_PORT: ${MONGO_PORT_OO}
      MONGO_USERNAME: ${MONGO_USERNAME_OO}
      MONGO_PASSWORD: ${MONGO_PASSWORD_OO}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_ORCHESTRATOR_DATABASE: ${MONGO_ORCHESTRATOR_DATABASE}
      KAFKA_HOST: ${KAFKA_HOST_OO}
      KAFKA_PORT: ${KAFKA_PORT_OO}
      KAFKA_USERNAME: ${KAFKA_USERNAME_OO}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD_OO}
      OAUTH2_CLIENT_ID: ${OAUTH2_CLIENT_ID_OO}
      OAUTH2_CLIENT_SECRET: ${OAUTH2_CLIENT_SECRET_OO}
      OAUTH2_TOKEN_ENDPOINT: ${OAUTH2_TOKEN_ENDPOINT}
    ports:
      - "8000:8000"


  federator-po:
    container_name: ${BASE_URL_PO}
    build:
      context: .
      dockerfile: ./deployment/docker/Dockerfile
    environment:
      OPERATOR_ID: ${OPERATOR_ID_PO}
      API_PORT: ${API_PORT_PO}
      BASE_URL: ${BASE_URL_PO}
      MONGO_HOST: ${MONGO_HOST_PO}
      MONGO_PORT: ${MONGO_PORT_PO}
      MONGO_USERNAME: ${MONGO_USERNAME_PO}
      MONGO_PASSWORD: ${MONGO_PASSWORD_PO}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_ORCHESTRATOR_DATABASE: ${MONGO_ORCHESTRATOR_DATABASE}
      KAFKA_HOST: ${KAFKA_HOST_PO}
      KAFKA_PORT: ${KAFKA_PORT_PO}
      KAFKA_USERNAME: ${KAFKA_USERNAME_PO}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD_PO}
      OAUTH2_CLIENT_ID: ${OAUTH2_CLIENT_ID_PO}
      OAUTH2_CLIENT_SECRET: ${OAUTH2_CLIENT_SECRET_PO}
      OAUTH2_TOKEN_ENDPOINT: ${OAUTH2_TOKEN_ENDPOINT}
    ports:
      - "8001:8000"