basePath: /federation/v1
definitions:
  models.AccessToken:
    properties:
      accessToken:
        type: string
      expiresAt:
        type: string
    type: object
  models.AccessTokenRequestData:
    properties:
      clientId:
        type: string
      clientSecret:
        type: string
    type: object
  models.FederationHealthInfo:
    properties:
      federationStartTime:
        type: string
      federationStatus:
        $ref: '#/definitions/models.State'
      numOfAcceptedZones:
        type: string
      numOfActiveAlarms:
        type: string
      numOfApplications:
        type: string
    type: object
  models.FederationInitiateRequestData:
    properties:
      authEndpoint:
        type: string
      federationEndpoint:
        type: string
    required:
    - authEndpoint
    - federationEndpoint
    type: object
  models.FederationMetaInfo:
    properties:
      allowedFixedNetworkIds:
        items:
          type: string
        type: array
      allowedMobileNetworkIds:
        $ref: '#/definitions/models.MobileNetworkIds'
      edgeDiscoveryServiceEndPoint:
        $ref: '#/definitions/models.ServiceEndpoint'
      lcmServiceEndPoint:
        $ref: '#/definitions/models.ServiceEndpoint'
      offeredAvailabilityZones:
        items:
          $ref: '#/definitions/models.ZoneDetails'
        type: array
      platformCaps:
        items:
          type: string
        type: array
    required:
    - platformCaps
    type: object
  models.FederationPatchParams:
    properties:
      addFixedNetworkIds:
        items:
          type: string
        type: array
      addMobileNetworkIds:
        $ref: '#/definitions/models.MobileNetworkIds'
      modificationDate:
        type: string
      objectType:
        description: Must be either "MOBILE_NETWORK_CODES" or "FIXED_NETWORK_CODES"
        type: string
      operationType:
        description: Must be either "ADD_CODES", "REMOVE_CODES" or "UPDATE_CODES"
        type: string
      removeFixedNetworkIds:
        items:
          type: string
        type: array
      removeMobileNetworkIds:
        $ref: '#/definitions/models.MobileNetworkIds'
    type: object
  models.FederationRenewalResponseData:
    properties:
      federationContextId:
        type: string
      federationExpiryDate:
        type: string
      federationRenewalDate:
        type: string
    type: object
  models.FederationRequestData:
    properties:
      accessToken:
        $ref: '#/definitions/models.AccessToken'
      initialDate:
        description: Time zone info of the federation initiated by the originating
          OP
        type: string
      origOPCountryCode:
        type: string
      origOPFederationId:
        type: string
      origOPFixedNetworkCodes:
        items:
          type: string
        type: array
      origOPMobileNetworkCodes:
        $ref: '#/definitions/models.MobileNetworkIds'
      partnerStatusLink:
        type: string
    required:
    - accessToken
    - initialDate
    - partnerStatusLink
    type: object
  models.FederationResponseData:
    properties:
      edgeDiscoveryServiceEndPoint:
        $ref: '#/definitions/models.ServiceEndpoint'
      federationContextId:
        type: string
      federationExpiryDate:
        description: Date and Time zone info of the existing federation expiry
        type: string
      federationRenewalDate:
        description: Date and Time zone info of the existing federation renewal. Shall
          be less than federationExpiryDate
        type: string
      lcmServiceEndPoint:
        $ref: '#/definitions/models.ServiceEndpoint'
      offeredAvailabilityZones:
        description: List of zones, which the operator platform wishes to make available
          to developers/ISVs of requesting operator platform.
        items:
          $ref: '#/definitions/models.ZoneDetails'
        type: array
      partnerOPCountryCode:
        type: string
      partnerOPFederationId:
        type: string
      partnerOPFixedNetworkCodes:
        items:
          type: string
        type: array
      partnerOPMobileNetworkCodes:
        $ref: '#/definitions/models.MobileNetworkIds'
      platformCaps:
        items:
          type: string
        type: array
    required:
    - edgeDiscoveryServiceEndPoint
    - federationContextId
    - lcmServiceEndPoint
    - partnerOPCountryCode
    - platformCaps
    type: object
  models.InvalidParam:
    properties:
      param:
        type: string
      reason:
        type: string
    type: object
  models.MobileNetworkIds:
    properties:
      mcc:
        type: string
      mncs:
        items:
          type: string
        type: array
    type: object
  models.OrchestratorInfo:
    properties:
      kafkaUrl:
        type: string
      mobileNetworkCodes:
        items:
          type: string
        type: array
      operatorAddress:
        type: string
      operatorId:
        type: string
      operatorName:
        type: string
      operatorPublicKey:
        type: string
    type: object
  models.ProblemDetails:
    properties:
      cause:
        description: Fixed string indicating cause of the issue
        type: string
      detail:
        description: Specific detail of the issue
        type: string
      invalidParams:
        items:
          $ref: '#/definitions/models.InvalidParam'
        type: array
      title:
        description: Summary of the problem
        type: string
    type: object
  models.ServiceEndpoint:
    properties:
      fqdn:
        type: string
      ipv4Addresses:
        items:
          type: string
        type: array
      ipv6Addresses:
        items:
          type: string
        type: array
      port:
        type: integer
    type: object
  models.State:
    properties:
      alarmState:
        description: Defines the alarm state during its life cycle (raised | updated
          | cleared).
        type: string
    type: object
  models.ZoneDetails:
    properties:
      geographyDetails:
        description: Details about cities or state covered by the edge. Details about
          the type of locality for eg rural, urban, industrial etc. This information
          is defined in human readable form.
        type: string
      geolocation:
        type: string
      zoneId:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is the API documentation for the MEC Federator.
  title: MEC Federator API
  version: "1.0"
paths:
  /auth/token:
    post:
      consumes:
      - application/json
      description: Issue an access token from Keycloak
      parameters:
      - description: Client ID and Client Secret
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AccessTokenRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccessToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Issue Access Token
      tags:
      - Authentication
  /ewbi/{federationContextId}/health:
    get:
      consumes:
      - application/json
      description: Checks the health status of the federation
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FederationHealthInfo'
        "400":
          description: Invalid federationContextId
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Get Local Federation Health Info
      tags:
      - EWBI - FederationManagement
  /ewbi/{federationContextId}/partner:
    delete:
      consumes:
      - application/json
      description: Removes a federation relationship by its federationContextId
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: Federation removed successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Remove Federation Relationship
      tags:
      - EWBI - FederationManagement
    get:
      consumes:
      - application/json
      description: Retrieves metadata information about a federation based on the
        federationContextId
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FederationMetaInfo'
        "400":
          description: Invalid Federation Context ID
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Get Federation Meta Info
      tags:
      - EWBI - FederationManagement
    patch:
      consumes:
      - application/json
      description: Updates a federation object with the given federationContextId
        and patch parameters
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      - description: Patch Parameters
        in: body
        name: patchParams
        required: true
        schema:
          $ref: '#/definitions/models.FederationPatchParams'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: Federation updated successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request or federation not found
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Update Federation Details
      tags:
      - EWBI - FederationManagement
  /ewbi/{federationContextId}/renew:
    post:
      consumes:
      - application/json
      description: Renews the federation relationship with the given federationContextId
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'federationContextId: id, federationRenewalDate: time, federationExpiryDate:
            time'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid federationContextId
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Renew Federation Relationship
      tags:
      - EWBI - FederationManagement
  /ewbi/fed-context-id:
    get:
      consumes:
      - application/json
      description: Retrieves the federationContextId using the accessToken
      parameters:
      - description: Access Token
        in: query
        name: accessToken
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'federationContextId: id'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: No Federation found with the given accessToken
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Get Federation Context Identifier
      tags:
      - EWBI - FederationManagement
  /ewbi/partner:
    post:
      consumes:
      - application/json
      description: Establishes a new federation relationship with another federator
        with the provided data
      parameters:
      - description: Federation Request Data
        in: body
        name: federationRequestData
        required: true
        schema:
          $ref: '#/definitions/models.FederationRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FederationResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Accept Federation Relationship
      tags:
      - EWBI - FederationManagement
  /nbi/{federationContextId}/health:
    get:
      consumes:
      - application/json
      description: Retrieves the health information of the federation partner
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FederationHealthInfo'
        "400":
          description: federationContextId must be provided
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "404":
          description: Federation not found
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Get Federation Health Info from partner OP
      tags:
      - NBI - FederationManagement
  /nbi/{federationContextId}/partner:
    delete:
      consumes:
      - application/json
      description: Removes a previously established federation relationship by its
        federationContextId
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'status: Federation removed successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: federationContextId must be provided
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Remove Federation Relationship with a partner OP
      tags:
      - NBI - FederationManagement
    get:
      consumes:
      - application/json
      description: Retrieves federation information from the partner federator
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FederationHealthInfo'
        "400":
          description: federationContextId must be provided
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "404":
          description: Federation not found
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Get Federation Meta Info from partner OP
      tags:
      - NBI - FederationManagement
  /nbi/{federationContextId}/renew:
    post:
      consumes:
      - application/json
      description: Requests the renewal of the federation with the partner federator
      parameters:
      - description: Federation Context ID
        in: path
        name: federationContextId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FederationRenewalResponseData'
        "400":
          description: federationContextId must be provided
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "404":
          description: Federation not found
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Request Federation Renewal with partner OP
      tags:
      - NBI - FederationManagement
  /nbi/mec-system:
    get:
      consumes:
      - application/json
      description: Get MEC System Information
      produces:
      - application/json
      responses:
        "200":
          description: Orchestrator Information
          schema:
            $ref: '#/definitions/models.OrchestratorInfo'
        "500":
          description: Internal error during orchestrator information retrieval
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Get MEC System Information
      tags:
      - NBI - MEC System Management
    post:
      consumes:
      - application/json
      description: Register MEC System Information
      parameters:
      - description: Orchestrator Information
        in: body
        name: orchestratorInfo
        required: true
        schema:
          $ref: '#/definitions/models.OrchestratorInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Orchestrator Information
          schema:
            $ref: '#/definitions/models.OrchestratorInfo'
        "400":
          description: Invalid request body or missing fields
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal error during orchestrator registration
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Register MEC System Information
      tags:
      - NBI - MEC System Management
  /nbi/partner:
    post:
      consumes:
      - application/json
      description: Initiates the federation establishment procedure with another federator
      parameters:
      - description: Federation and Auth Endpoints
        in: body
        name: federationRequest
        required: true
        schema:
          $ref: '#/definitions/models.FederationInitiateRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FederationResponseData'
        "400":
          description: Invalid request body or missing fields
          schema:
            $ref: '#/definitions/models.ProblemDetails'
        "500":
          description: Internal error during federation process
          schema:
            $ref: '#/definitions/models.ProblemDetails'
      summary: Initiate Federation Relationship with a partner OP
      tags:
      - NBI - FederationManagement
swagger: "2.0"
